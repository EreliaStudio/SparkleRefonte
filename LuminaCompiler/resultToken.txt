[                  Comment] | [  1::0  ] | // Include predefined and user-provided files
[                 #include] | [  2::0  ] | #include
[          IncludeLitteral] | [  2::9  ] | <importA>
[                 #include] | [  3::0  ] | #include
[           StringLitteral] | [  3::9  ] | "importB"
[                  Comment] | [  5::0  ] | // Define the pipeline flow
[             PipelineFlow] | [  6::0  ] | Input
[    PipelineFlowSeparator] | [  6::6  ] | ->
[             PipelineFlow] | [  6::9  ] | VertexPass
[                Separator] | [  6::19 ] | :
[               Identifier] | [  6::21 ] | Vector3
[               Identifier] | [  6::29 ] | vertexPosition
[            EndOfSentence] | [  6::43 ] | ;
[             PipelineFlow] | [  7::0  ] | Input
[    PipelineFlowSeparator] | [  7::6  ] | ->
[             PipelineFlow] | [  7::9  ] | VertexPass
[                Separator] | [  7::19 ] | :
[               Identifier] | [  7::21 ] | Vector3
[               Identifier] | [  7::29 ] | vertexNormal
[            EndOfSentence] | [  7::41 ] | ;
[             PipelineFlow] | [  8::0  ] | Input
[    PipelineFlowSeparator] | [  8::6  ] | ->
[             PipelineFlow] | [  8::9  ] | VertexPass
[                Separator] | [  8::19 ] | :
[               Identifier] | [  8::21 ] | Vector2
[               Identifier] | [  8::29 ] | vertexUV
[            EndOfSentence] | [  8::37 ] | ;
[             PipelineFlow] | [  9::0  ] | VertexPass
[    PipelineFlowSeparator] | [  9::11 ] | ->
[             PipelineFlow] | [  9::14 ] | FragmentPass
[                Separator] | [  9::26 ] | :
[               Identifier] | [  9::28 ] | Vector3
[               Identifier] | [  9::36 ] | fragPosition
[            EndOfSentence] | [  9::48 ] | ;
[             PipelineFlow] | [ 10::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 10::11 ] | ->
[             PipelineFlow] | [ 10::14 ] | FragmentPass
[                Separator] | [ 10::26 ] | :
[               Identifier] | [ 10::28 ] | Vector3
[               Identifier] | [ 10::36 ] | fragNormal
[            EndOfSentence] | [ 10::46 ] | ;
[             PipelineFlow] | [ 11::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 11::11 ] | ->
[             PipelineFlow] | [ 11::14 ] | FragmentPass
[                Separator] | [ 11::26 ] | :
[               Identifier] | [ 11::28 ] | Vector2
[               Identifier] | [ 11::36 ] | fragUV
[            EndOfSentence] | [ 11::42 ] | ;
[                  Comment] | [ 13::0  ] | // Define custom structures
[           StructureBlock] | [ 14::0  ] | struct
[               Identifier] | [ 14::7  ] | Material
[         OpenCurlyBracket] | [ 15::0  ] | {
[               Identifier] | [ 16::4  ] | Vector3
[               Identifier] | [ 16::12 ] | diffuseColor
[            EndOfSentence] | [ 16::24 ] | ;
[               Identifier] | [ 17::4  ] | Vector3
[               Identifier] | [ 17::12 ] | specularColor
[            EndOfSentence] | [ 17::25 ] | ;
[               Identifier] | [ 18::4  ] | float
[               Identifier] | [ 18::10 ] | shininess
[              OpenBracket] | [ 18::19 ] | [
[                   Number] | [ 18::20 ] | 4
[             CloseBracket] | [ 18::21 ] | ]
[            EndOfSentence] | [ 18::22 ] | ;
[        CloseCurlyBracket] | [ 19::0  ] | }
[            EndOfSentence] | [ 19::1  ] | ;
[                  Comment] | [ 21::0  ] | // Define a texture
[                  Texture] | [ 22::0  ] | Texture
[               Identifier] | [ 22::8  ] | diffuseTexture
[            EndOfSentence] | [ 22::22 ] | ;
[                  Comment] | [ 24::0  ] | // Define attribute blocks
[           AttributeBlock] | [ 25::0  ] | AttributeBlock
[               Identifier] | [ 25::15 ] | modelAttributes
[         OpenCurlyBracket] | [ 26::0  ] | {
[               Identifier] | [ 27::4  ] | Matrix4x4
[               Identifier] | [ 27::14 ] | modelMatrix
[            EndOfSentence] | [ 27::25 ] | ;
[               Identifier] | [ 28::4  ] | Matrix4x4
[               Identifier] | [ 28::14 ] | normalMatrix
[            EndOfSentence] | [ 28::26 ] | ;
[        CloseCurlyBracket] | [ 29::0  ] | }
[            EndOfSentence] | [ 29::1  ] | ;
[                  Comment] | [ 31::0  ] | // Define constant blocks
[            ConstantBlock] | [ 32::0  ] | ConstantBlock
[               Identifier] | [ 32::14 ] | lightingConstants
[         OpenCurlyBracket] | [ 33::0  ] | {
[               Identifier] | [ 34::4  ] | Vector3
[               Identifier] | [ 34::12 ] | lightPosition
[            EndOfSentence] | [ 34::25 ] | ;
[               Identifier] | [ 35::4  ] | Vector3
[               Identifier] | [ 35::12 ] | lightColor
[            EndOfSentence] | [ 35::22 ] | ;
[               Identifier] | [ 36::4  ] | float
[               Identifier] | [ 36::10 ] | ambientIntensity
[            EndOfSentence] | [ 36::26 ] | ;
[        CloseCurlyBracket] | [ 37::0  ] | }
[            EndOfSentence] | [ 37::1  ] | ;
[               Identifier] | [ 39::4  ] | Vector3
[               Identifier] | [ 39::12 ] | calculateDiffuse
[          OpenParenthesis] | [ 39::28 ] | (
[               Identifier] | [ 39::29 ] | Vector3
[               Identifier] | [ 39::37 ] | normal
[                    Comma] | [ 39::43 ] | ,
[               Identifier] | [ 39::45 ] | Vector3
[               Identifier] | [ 39::53 ] | lightDir
[                    Comma] | [ 39::61 ] | ,
[               Identifier] | [ 39::63 ] | Vector3
[               Identifier] | [ 39::71 ] | lightColor
[         CloseParenthesis] | [ 39::81 ] | )
[         OpenCurlyBracket] | [ 40::4  ] | {
[               Identifier] | [ 41::8  ] | float
[               Identifier] | [ 41::14 ] | diff
[               Assignator] | [ 41::19 ] | =
[               Identifier] | [ 41::21 ] | max
[          OpenParenthesis] | [ 41::24 ] | (
[               Identifier] | [ 41::25 ] | dot
[          OpenParenthesis] | [ 41::28 ] | (
[               Identifier] | [ 41::29 ] | normal
[                    Comma] | [ 41::35 ] | ,
[               Identifier] | [ 41::37 ] | lightDir
[         CloseParenthesis] | [ 41::45 ] | )
[                    Comma] | [ 41::46 ] | ,
[                   Number] | [ 41::48 ] | 0.0
[         CloseParenthesis] | [ 41::51 ] | )
[            EndOfSentence] | [ 41::52 ] | ;
[                   Return] | [ 42::8  ] | return
[               Identifier] | [ 42::15 ] | diff
[                 Operator] | [ 42::20 ] | *
[               Identifier] | [ 42::22 ] | lightColor
[            EndOfSentence] | [ 42::32 ] | ;
[        CloseCurlyBracket] | [ 43::4  ] | }
[                  Comment] | [ 44::0  ] | // Create namespaces
[                Namespace] | [ 45::0  ] | namespace
[               Identifier] | [ 45::10 ] | Lighting
[         OpenCurlyBracket] | [ 46::0  ] | {
[                  Texture] | [ 47::4  ] | Texture
[               Identifier] | [ 47::12 ] | diffuseTexture2
[            EndOfSentence] | [ 47::27 ] | ;
[           StructureBlock] | [ 49::4  ] | struct
[               Identifier] | [ 49::11 ] | Material
[         OpenCurlyBracket] | [ 50::4  ] | {
[               Identifier] | [ 51::8  ] | Vector3
[               Identifier] | [ 51::16 ] | diffuseColor
[            EndOfSentence] | [ 51::28 ] | ;
[               Identifier] | [ 52::8  ] | Vector3
[               Identifier] | [ 52::16 ] | specularColor
[            EndOfSentence] | [ 52::29 ] | ;
[               Identifier] | [ 53::8  ] | float
[               Identifier] | [ 53::14 ] | shininess
[              OpenBracket] | [ 53::23 ] | [
[                   Number] | [ 53::24 ] | 4
[             CloseBracket] | [ 53::25 ] | ]
[            EndOfSentence] | [ 53::26 ] | ;
[        CloseCurlyBracket] | [ 54::4  ] | }
[            EndOfSentence] | [ 54::5  ] | ;
[               Identifier] | [ 56::4  ] | Vector3
[               Identifier] | [ 56::12 ] | calculateDiffuse
[          OpenParenthesis] | [ 56::28 ] | (
[               Identifier] | [ 56::29 ] | Vector3
[               Identifier] | [ 56::37 ] | normal
[                    Comma] | [ 56::43 ] | ,
[               Identifier] | [ 56::45 ] | Vector3
[               Identifier] | [ 56::53 ] | lightDir
[                    Comma] | [ 56::61 ] | ,
[               Identifier] | [ 56::63 ] | Vector3
[               Identifier] | [ 56::71 ] | lightColor
[         CloseParenthesis] | [ 56::81 ] | )
[         OpenCurlyBracket] | [ 57::4  ] | {
[               Identifier] | [ 58::8  ] | float
[               Identifier] | [ 58::14 ] | diff
[               Assignator] | [ 58::19 ] | =
[               Identifier] | [ 58::21 ] | max
[          OpenParenthesis] | [ 58::24 ] | (
[               Identifier] | [ 58::25 ] | dot
[          OpenParenthesis] | [ 58::28 ] | (
[               Identifier] | [ 58::29 ] | normal
[                    Comma] | [ 58::35 ] | ,
[               Identifier] | [ 58::37 ] | lightDir
[         CloseParenthesis] | [ 58::45 ] | )
[                    Comma] | [ 58::46 ] | ,
[                   Number] | [ 58::48 ] | 0.0
[         CloseParenthesis] | [ 58::51 ] | )
[            EndOfSentence] | [ 58::52 ] | ;
[                   Return] | [ 59::8  ] | return
[               Identifier] | [ 59::15 ] | diff
[                 Operator] | [ 59::20 ] | *
[               Identifier] | [ 59::22 ] | lightColor
[            EndOfSentence] | [ 59::32 ] | ;
[        CloseCurlyBracket] | [ 60::4  ] | }
[               Identifier] | [ 63::4  ] | Vector3
[               Identifier] | [ 63::12 ] | calculateDiffuse
[          OpenParenthesis] | [ 63::28 ] | (
[               Identifier] | [ 63::29 ] | Vector3
[               Identifier] | [ 63::37 ] | normal
[                    Comma] | [ 63::43 ] | ,
[               Identifier] | [ 63::45 ] | Vector3
[               Identifier] | [ 63::53 ] | lightDir
[                    Comma] | [ 63::61 ] | ,
[               Identifier] | [ 63::63 ] | Vector4
[               Identifier] | [ 63::71 ] | lightColor
[         CloseParenthesis] | [ 63::81 ] | )
[         OpenCurlyBracket] | [ 64::4  ] | {
[               Identifier] | [ 65::8  ] | float
[               Identifier] | [ 65::14 ] | diff
[               Assignator] | [ 65::19 ] | =
[               Identifier] | [ 65::21 ] | max
[          OpenParenthesis] | [ 65::24 ] | (
[               Identifier] | [ 65::25 ] | dot
[          OpenParenthesis] | [ 65::28 ] | (
[               Identifier] | [ 65::29 ] | normal
[                    Comma] | [ 65::35 ] | ,
[               Identifier] | [ 65::37 ] | lightDir
[         CloseParenthesis] | [ 65::45 ] | )
[                    Comma] | [ 65::46 ] | ,
[                   Number] | [ 65::48 ] | 0.0
[         CloseParenthesis] | [ 65::51 ] | )
[            EndOfSentence] | [ 65::52 ] | ;
[                   Return] | [ 66::8  ] | return
[               Identifier] | [ 66::15 ] | diff
[                 Operator] | [ 66::20 ] | *
[               Identifier] | [ 66::22 ] | lightColor
[            EndOfSentence] | [ 66::32 ] | ;
[        CloseCurlyBracket] | [ 67::4  ] | }
[               Identifier] | [ 69::4  ] | Vector3
[               Identifier] | [ 69::12 ] | calculateSpecular
[          OpenParenthesis] | [ 69::29 ] | (
[               Identifier] | [ 69::30 ] | Vector3
[               Identifier] | [ 69::38 ] | normal
[                    Comma] | [ 69::44 ] | ,
[               Identifier] | [ 69::46 ] | Vector3
[               Identifier] | [ 69::54 ] | lightDir
[                    Comma] | [ 69::62 ] | ,
[               Identifier] | [ 69::64 ] | Vector3
[               Identifier] | [ 69::72 ] | viewDir
[                    Comma] | [ 69::79 ] | ,
[               Identifier] | [ 69::81 ] | float
[               Identifier] | [ 69::87 ] | shininess
[                    Comma] | [ 69::96 ] | ,
[               Identifier] | [ 69::98 ] | Vector3
[               Identifier] | [ 69::106] | lightColor
[         CloseParenthesis] | [ 69::116] | )
[         OpenCurlyBracket] | [ 70::4  ] | {
[               Identifier] | [ 71::8  ] | Vector3
[               Identifier] | [ 71::16 ] | reflectDir
[               Assignator] | [ 71::27 ] | =
[               Identifier] | [ 71::29 ] | reflect
[          OpenParenthesis] | [ 71::36 ] | (
[                 Operator] | [ 71::37 ] | -
[               Identifier] | [ 71::38 ] | lightDir
[                    Comma] | [ 71::46 ] | ,
[               Identifier] | [ 71::48 ] | normal
[         CloseParenthesis] | [ 71::54 ] | )
[            EndOfSentence] | [ 71::55 ] | ;
[               Identifier] | [ 72::8  ] | float
[               Identifier] | [ 72::14 ] | spec
[               Assignator] | [ 72::19 ] | =
[               Identifier] | [ 72::21 ] | pow
[          OpenParenthesis] | [ 72::24 ] | (
[               Identifier] | [ 72::25 ] | max
[          OpenParenthesis] | [ 72::28 ] | (
[               Identifier] | [ 72::29 ] | dot
[          OpenParenthesis] | [ 72::32 ] | (
[               Identifier] | [ 72::33 ] | viewDir
[                    Comma] | [ 72::40 ] | ,
[               Identifier] | [ 72::42 ] | reflectDir
[         CloseParenthesis] | [ 72::52 ] | )
[                    Comma] | [ 72::53 ] | ,
[                   Number] | [ 72::55 ] | 0.0
[         CloseParenthesis] | [ 72::58 ] | )
[                    Comma] | [ 72::59 ] | ,
[               Identifier] | [ 72::61 ] | shininess
[         CloseParenthesis] | [ 72::70 ] | )
[            EndOfSentence] | [ 72::71 ] | ;
[                   Return] | [ 73::8  ] | return
[               Identifier] | [ 73::15 ] | spec
[                 Operator] | [ 73::20 ] | *
[               Identifier] | [ 73::22 ] | lightColor
[            EndOfSentence] | [ 73::32 ] | ;
[        CloseCurlyBracket] | [ 74::4  ] | }
[        CloseCurlyBracket] | [ 75::0  ] | }
[                  Comment] | [ 77::0  ] | /*
Pipeline Description:
This pipeline is designed to render a 3D object by processing its vertex data and applying lighting calculations.

Vertex Shader (VertexPass):
- Transforms the input vertex positions using a model matrix to position the object correctly in the world space.
- Transforms the normals using the normal matrix for accurate lighting calculations.
- Passes UV coordinates, transformed positions, and normals to the fragment shader.

Fragment Shader (FragmentPass):
- Performs lighting calculations using ambient, diffuse, and specular components.
- Combines these lighting components with a texture sampled from the UV coordinates.
- Discards fragments where the texture's alpha value is zero.
- Sets the final pixel color based on the combined lighting and texture information.

The vertex and fragment shaders work together to accurately render the 3D object with realistic lighting and texturing.
*/
[                  Comment] | [ 95::0  ] | // Define the vertex shader stage
[             PipelineFlow] | [ 96::0  ] | VertexPass
[          OpenParenthesis] | [ 96::10 ] | (
[         CloseParenthesis] | [ 96::11 ] | )
[         OpenCurlyBracket] | [ 97::0  ] | {
[               Identifier] | [ 98::4  ] | Vector4
[               Identifier] | [ 98::12 ] | worldPosition
[               Assignator] | [ 98::26 ] | =
[               Identifier] | [ 98::28 ] | modelAttributes
[                 Accessor] | [ 98::43 ] | .
[               Identifier] | [ 98::44 ] | modelMatrix
[                 Operator] | [ 98::56 ] | *
[               Identifier] | [ 98::58 ] | Vector4
[          OpenParenthesis] | [ 98::65 ] | (
[               Identifier] | [ 98::66 ] | vertexPosition
[                    Comma] | [ 98::80 ] | ,
[                   Number] | [ 98::82 ] | 1.0
[         CloseParenthesis] | [ 98::85 ] | )
[            EndOfSentence] | [ 98::86 ] | ;
[               Identifier] | [ 99::4  ] | fragPosition
[               Assignator] | [ 99::17 ] | =
[               Identifier] | [ 99::19 ] | worldPosition
[                 Accessor] | [ 99::32 ] | .
[               Identifier] | [ 99::33 ] | xyz
[            EndOfSentence] | [ 99::36 ] | ;
[               Identifier] | [100::4  ] | fragNormal
[               Assignator] | [100::15 ] | =
[               Identifier] | [100::17 ] | mat3
[          OpenParenthesis] | [100::21 ] | (
[               Identifier] | [100::22 ] | modelAttributes
[                 Accessor] | [100::37 ] | .
[               Identifier] | [100::38 ] | normalMatrix
[         CloseParenthesis] | [100::50 ] | )
[                 Operator] | [100::52 ] | *
[               Identifier] | [100::54 ] | vertexNormal
[            EndOfSentence] | [100::66 ] | ;
[               Identifier] | [101::4  ] | fragUV
[               Assignator] | [101::11 ] | =
[               Identifier] | [101::13 ] | vertexUV
[            EndOfSentence] | [101::21 ] | ;
[               Identifier] | [103::4  ] | Vector4
[               Identifier] | [103::12 ] | clipSpacePosition
[               Assignator] | [103::30 ] | =
[               Identifier] | [103::32 ] | worldPosition
[            EndOfSentence] | [103::45 ] | ;
[               Identifier] | [104::4  ] | pixelPosition
[               Assignator] | [104::18 ] | =
[               Identifier] | [104::20 ] | clipSpacePosition
[            EndOfSentence] | [104::37 ] | ;
[        CloseCurlyBracket] | [105::0  ] | }
[                  Comment] | [107::0  ] | // Define the fragment shader stage
[             PipelineFlow] | [108::0  ] | FragmentPass
[          OpenParenthesis] | [108::12 ] | (
[         CloseParenthesis] | [108::13 ] | )
[         OpenCurlyBracket] | [109::0  ] | {
[                  Comment] | [110::4  ] | // Error handling example
[              IfStatement] | [111::4  ] | if
[          OpenParenthesis] | [111::7  ] | (
[               Identifier] | [111::8  ] | lightingConstants
[                 Accessor] | [111::25 ] | .
[               Identifier] | [111::26 ] | ambientIntensity
[                 Operator] | [111::43 ] | <
[                   Number] | [111::45 ] | 0.0
[                 Operator] | [111::49 ] | ||
[               Identifier] | [111::52 ] | lightingConstants
[                 Accessor] | [111::69 ] | .
[               Identifier] | [111::70 ] | ambientIntensity
[                 Operator] | [111::87 ] | >
[                   Number] | [111::89 ] | 1.0
[         CloseParenthesis] | [111::92 ] | )
[         OpenCurlyBracket] | [112::4  ] | {
[               Identifier] | [113::8  ] | raiseException
[          OpenParenthesis] | [113::22 ] | (
[           StringLitteral] | [113::23 ] | "Ambient intensity must be between 0 and 1. Current value: %d"
[                    Comma] | [113::85 ] | ,
[               Identifier] | [113::87 ] | lightingConstants
[                 Accessor] | [113::104] | .
[               Identifier] | [113::105] | ambientIntensity
[         CloseParenthesis] | [113::121] | )
[            EndOfSentence] | [113::122] | ;
[        CloseCurlyBracket] | [114::4  ] | }
[               Identifier] | [116::4  ] | Vector3
[               Identifier] | [116::12 ] | normal
[               Assignator] | [116::19 ] | =
[               Identifier] | [116::21 ] | normalize
[          OpenParenthesis] | [116::30 ] | (
[               Identifier] | [116::31 ] | fragNormal
[         CloseParenthesis] | [116::41 ] | )
[            EndOfSentence] | [116::42 ] | ;
[               Identifier] | [117::4  ] | Vector3
[               Identifier] | [117::12 ] | lightDir
[               Assignator] | [117::21 ] | =
[               Identifier] | [117::23 ] | normalize
[          OpenParenthesis] | [117::32 ] | (
[               Identifier] | [117::33 ] | lightingConstants
[                 Accessor] | [117::50 ] | .
[               Identifier] | [117::51 ] | lightPosition
[                 Operator] | [117::65 ] | -
[               Identifier] | [117::67 ] | fragPosition
[         CloseParenthesis] | [117::79 ] | )
[            EndOfSentence] | [117::80 ] | ;
[               Identifier] | [118::4  ] | Vector3
[               Identifier] | [118::12 ] | viewDir
[               Assignator] | [118::20 ] | =
[               Identifier] | [118::22 ] | normalize
[          OpenParenthesis] | [118::31 ] | (
[                 Operator] | [118::32 ] | -
[               Identifier] | [118::33 ] | fragPosition
[         CloseParenthesis] | [118::45 ] | )
[            EndOfSentence] | [118::46 ] | ;
[               Identifier] | [120::4  ] | Vector3
[               Identifier] | [120::12 ] | ambient
[               Assignator] | [120::20 ] | =
[               Identifier] | [120::22 ] | lightingConstants
[                 Accessor] | [120::39 ] | .
[               Identifier] | [120::40 ] | ambientIntensity
[                 Operator] | [120::57 ] | *
[               Identifier] | [120::59 ] | lightingConstants
[                 Accessor] | [120::76 ] | .
[               Identifier] | [120::77 ] | lightColor
[            EndOfSentence] | [120::87 ] | ;
[               Identifier] | [122::4  ] | Vector3
[               Identifier] | [122::12 ] | diffuse
[               Assignator] | [122::20 ] | =
[               Identifier] | [122::22 ] | Lighting
[       NamespaceSeparator] | [122::30 ] | ::
[               Identifier] | [122::32 ] | calculateDiffuse
[          OpenParenthesis] | [122::48 ] | (
[               Identifier] | [122::49 ] | normal
[                    Comma] | [122::55 ] | ,
[               Identifier] | [122::57 ] | lightDir
[                    Comma] | [122::65 ] | ,
[               Identifier] | [122::67 ] | lightingConstants
[                 Accessor] | [122::84 ] | .
[               Identifier] | [122::85 ] | lightColor
[         CloseParenthesis] | [122::95 ] | )
[            EndOfSentence] | [122::96 ] | ;
[               Identifier] | [124::4  ] | Material
[               Identifier] | [124::13 ] | material
[            EndOfSentence] | [124::21 ] | ;
[               Identifier] | [125::4  ] | Vector3
[               Identifier] | [125::12 ] | specular
[               Assignator] | [125::21 ] | =
[               Identifier] | [125::23 ] | Lighting
[       NamespaceSeparator] | [125::31 ] | ::
[               Identifier] | [125::33 ] | calculateSpecular
[          OpenParenthesis] | [125::50 ] | (
[               Identifier] | [125::51 ] | normal
[                    Comma] | [125::57 ] | ,
[               Identifier] | [125::59 ] | lightDir
[                    Comma] | [125::67 ] | ,
[               Identifier] | [125::69 ] | viewDir
[                    Comma] | [125::76 ] | ,
[               Identifier] | [125::78 ] | material
[                 Accessor] | [125::86 ] | .
[               Identifier] | [125::87 ] | shininess
[                    Comma] | [125::96 ] | ,
[               Identifier] | [125::98 ] | lightingConstants
[                 Accessor] | [125::115] | .
[               Identifier] | [125::116] | lightColor
[         CloseParenthesis] | [125::126] | )
[            EndOfSentence] | [125::127] | ;
[               Identifier] | [127::4  ] | Vector3
[               Identifier] | [127::12 ] | finalColor
[               Assignator] | [127::23 ] | =
[               Identifier] | [127::25 ] | ambient
[                 Operator] | [127::33 ] | +
[               Identifier] | [127::35 ] | diffuse
[                 Operator] | [127::43 ] | *
[               Identifier] | [127::45 ] | material
[                 Accessor] | [127::53 ] | .
[               Identifier] | [127::54 ] | diffuseColor
[                 Operator] | [127::67 ] | +
[               Identifier] | [127::69 ] | specular
[                 Operator] | [127::78 ] | *
[               Identifier] | [127::80 ] | material
[                 Accessor] | [127::88 ] | .
[               Identifier] | [127::89 ] | specularColor
[            EndOfSentence] | [127::102] | ;
[               Identifier] | [129::4  ] | Vector4
[               Identifier] | [129::12 ] | textureColor
[               Assignator] | [129::25 ] | =
[               Identifier] | [129::27 ] | getPixel
[          OpenParenthesis] | [129::35 ] | (
[               Identifier] | [129::36 ] | diffuseTexture
[                    Comma] | [129::50 ] | ,
[               Identifier] | [129::52 ] | fragUV
[         CloseParenthesis] | [129::58 ] | )
[            EndOfSentence] | [129::59 ] | ;
[               Identifier] | [130::4  ] | finalColor
[               Assignator] | [130::15 ] | *=
[               Identifier] | [130::18 ] | textureColor
[                 Accessor] | [130::30 ] | .
[               Identifier] | [130::31 ] | rgb
[            EndOfSentence] | [130::34 ] | ;
[              IfStatement] | [132::4  ] | if
[          OpenParenthesis] | [132::7  ] | (
[               Identifier] | [132::8  ] | textureColor
[                 Accessor] | [132::20 ] | .
[               Identifier] | [132::21 ] | a
[                 Operator] | [132::23 ] | ==
[                   Number] | [132::26 ] | 0
[         CloseParenthesis] | [132::27 ] | )
[         OpenCurlyBracket] | [133::4  ] | {
[                  Discard] | [134::8  ] | discard
[            EndOfSentence] | [134::15 ] | ;
[        CloseCurlyBracket] | [135::4  ] | }
[               Identifier] | [137::4  ] | pixelColor
[               Assignator] | [137::15 ] | =
[               Identifier] | [137::17 ] | Vector4
[          OpenParenthesis] | [137::24 ] | (
[               Identifier] | [137::25 ] | finalColor
[                    Comma] | [137::35 ] | ,
[               Identifier] | [137::37 ] | textureColor
[                 Accessor] | [137::49 ] | .
[               Identifier] | [137::50 ] | a
[         CloseParenthesis] | [137::51 ] | )
[            EndOfSentence] | [137::52 ] | ;
[        CloseCurlyBracket] | [138::0  ] | }
