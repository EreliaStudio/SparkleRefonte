[                  Comment] | [  1::0  ] | // Include predefined and user-provided files
[                 #include] | [  2::0  ] | #include
[          IncludeLitteral] | [  2::9  ] | <screenConstants>
[                 #include] | [  3::0  ] | #include
[           StringLitteral] | [  3::9  ] | "shader/customInclude.lum"
[                  Comment] | [  5::0  ] | // Define the pipeline flow
[             PipelineFlow] | [  6::0  ] | Input
[    PipelineFlowSeparator] | [  6::6  ] | ->
[             PipelineFlow] | [  6::9  ] | VertexPass
[                Separator] | [  6::19 ] | :
[               Identifier] | [  6::21 ] | Vector3
[               Identifier] | [  6::29 ] | vertexPosition
[            EndOfSentence] | [  6::43 ] | ;
[             PipelineFlow] | [  7::0  ] | Input
[    PipelineFlowSeparator] | [  7::6  ] | ->
[             PipelineFlow] | [  7::9  ] | VertexPass
[                Separator] | [  7::19 ] | :
[               Identifier] | [  7::21 ] | Vector3
[               Identifier] | [  7::29 ] | vertexNormal
[            EndOfSentence] | [  7::41 ] | ;
[             PipelineFlow] | [  8::0  ] | Input
[    PipelineFlowSeparator] | [  8::6  ] | ->
[             PipelineFlow] | [  8::9  ] | VertexPass
[                Separator] | [  8::19 ] | :
[               Identifier] | [  8::21 ] | vec2
[               Identifier] | [  8::26 ] | vertexUV
[            EndOfSentence] | [  8::34 ] | ;
[             PipelineFlow] | [  9::0  ] | VertexPass
[    PipelineFlowSeparator] | [  9::11 ] | ->
[             PipelineFlow] | [  9::14 ] | FragmentPass
[                Separator] | [  9::26 ] | :
[               Identifier] | [  9::28 ] | Vector3
[               Identifier] | [  9::36 ] | fragPosition
[            EndOfSentence] | [  9::48 ] | ;
[             PipelineFlow] | [ 10::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 10::11 ] | ->
[             PipelineFlow] | [ 10::14 ] | FragmentPass
[                Separator] | [ 10::26 ] | :
[               Identifier] | [ 10::28 ] | Vector3
[               Identifier] | [ 10::36 ] | fragNormal
[            EndOfSentence] | [ 10::46 ] | ;
[             PipelineFlow] | [ 11::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 11::11 ] | ->
[             PipelineFlow] | [ 11::14 ] | FragmentPass
[                Separator] | [ 11::26 ] | :
[               Identifier] | [ 11::28 ] | vec2
[               Identifier] | [ 11::33 ] | fragUV
[            EndOfSentence] | [ 11::39 ] | ;
[                  Comment] | [ 13::0  ] | // Define custom structures
[           StructureBlock] | [ 14::0  ] | struct
[               Identifier] | [ 14::7  ] | Material
[         OpenCurlyBracket] | [ 15::0  ] | {
[               Identifier] | [ 16::4  ] | Vector3
[               Identifier] | [ 16::12 ] | diffuseColor
[            EndOfSentence] | [ 16::24 ] | ;
[               Identifier] | [ 17::4  ] | Vector3
[               Identifier] | [ 17::12 ] | specularColor
[            EndOfSentence] | [ 17::25 ] | ;
[               Identifier] | [ 18::4  ] | float
[               Identifier] | [ 18::10 ] | shininess
[            EndOfSentence] | [ 18::19 ] | ;
[        CloseCurlyBracket] | [ 19::0  ] | }
[            EndOfSentence] | [ 19::1  ] | ;
[                  Comment] | [ 21::0  ] | // Define a texture
[                  Texture] | [ 22::0  ] | Texture
[               Identifier] | [ 22::8  ] | diffuseTexture
[            EndOfSentence] | [ 22::22 ] | ;
[                  Comment] | [ 24::0  ] | // Define attribute blocks
[           AttributeBlock] | [ 25::0  ] | AttributeBlock
[               Identifier] | [ 25::15 ] | modelAttributes
[         OpenCurlyBracket] | [ 26::0  ] | {
[               Identifier] | [ 27::4  ] | Matrix4x4
[               Identifier] | [ 27::14 ] | modelMatrix
[            EndOfSentence] | [ 27::25 ] | ;
[               Identifier] | [ 28::4  ] | Matrix4x4
[               Identifier] | [ 28::14 ] | normalMatrix
[            EndOfSentence] | [ 28::26 ] | ;
[        CloseCurlyBracket] | [ 29::0  ] | }
[            EndOfSentence] | [ 29::1  ] | ;
[                  Comment] | [ 31::0  ] | // Define constant blocks
[            ConstantBlock] | [ 32::0  ] | ConstantBlock
[               Identifier] | [ 32::14 ] | lightingConstants
[         OpenCurlyBracket] | [ 33::0  ] | {
[               Identifier] | [ 34::4  ] | Vector3
[               Identifier] | [ 34::12 ] | lightPosition
[            EndOfSentence] | [ 34::25 ] | ;
[               Identifier] | [ 35::4  ] | Vector3
[               Identifier] | [ 35::12 ] | lightColor
[            EndOfSentence] | [ 35::22 ] | ;
[               Identifier] | [ 36::4  ] | float
[               Identifier] | [ 36::10 ] | ambientIntensity
[            EndOfSentence] | [ 36::26 ] | ;
[        CloseCurlyBracket] | [ 37::0  ] | }
[            EndOfSentence] | [ 37::1  ] | ;
[                  Comment] | [ 39::0  ] | // Create namespaces
[                Namespace] | [ 40::0  ] | namespace
[               Identifier] | [ 40::10 ] | Lighting
[         OpenCurlyBracket] | [ 41::0  ] | {
[               Identifier] | [ 42::4  ] | Vector3
[               Identifier] | [ 42::12 ] | calculateDiffuse
[          OpenParenthesis] | [ 42::28 ] | (
[               Identifier] | [ 42::29 ] | Vector3
[               Identifier] | [ 42::37 ] | normal
[                    Comma] | [ 42::43 ] | ,
[               Identifier] | [ 42::45 ] | Vector3
[               Identifier] | [ 42::53 ] | lightDir
[                    Comma] | [ 42::61 ] | ,
[               Identifier] | [ 42::63 ] | Vector3
[               Identifier] | [ 42::71 ] | lightColor
[         CloseParenthesis] | [ 42::81 ] | )
[         OpenCurlyBracket] | [ 43::4  ] | {
[               Identifier] | [ 44::8  ] | float
[               Identifier] | [ 44::14 ] | diff
[               Assignator] | [ 44::19 ] | =
[               Identifier] | [ 44::21 ] | max
[          OpenParenthesis] | [ 44::24 ] | (
[               Identifier] | [ 44::25 ] | dot
[          OpenParenthesis] | [ 44::28 ] | (
[               Identifier] | [ 44::29 ] | normal
[                    Comma] | [ 44::35 ] | ,
[               Identifier] | [ 44::37 ] | lightDir
[         CloseParenthesis] | [ 44::45 ] | )
[                    Comma] | [ 44::46 ] | ,
[                   Number] | [ 44::48 ] | 0.0
[         CloseParenthesis] | [ 44::51 ] | )
[            EndOfSentence] | [ 44::52 ] | ;
[                   Return] | [ 45::8  ] | return
[               Identifier] | [ 45::15 ] | diff
[                 Operator] | [ 45::20 ] | *
[               Identifier] | [ 45::22 ] | lightColor
[            EndOfSentence] | [ 45::32 ] | ;
[        CloseCurlyBracket] | [ 46::4  ] | }
[               Identifier] | [ 48::4  ] | Vector3
[               Identifier] | [ 48::12 ] | calculateSpecular
[          OpenParenthesis] | [ 48::29 ] | (
[               Identifier] | [ 48::30 ] | Vector3
[               Identifier] | [ 48::38 ] | normal
[                    Comma] | [ 48::44 ] | ,
[               Identifier] | [ 48::46 ] | Vector3
[               Identifier] | [ 48::54 ] | lightDir
[                    Comma] | [ 48::62 ] | ,
[               Identifier] | [ 48::64 ] | Vector3
[               Identifier] | [ 48::72 ] | viewDir
[                    Comma] | [ 48::79 ] | ,
[               Identifier] | [ 48::81 ] | float
[               Identifier] | [ 48::87 ] | shininess
[                    Comma] | [ 48::96 ] | ,
[               Identifier] | [ 48::98 ] | Vector3
[               Identifier] | [ 48::106] | lightColor
[         CloseParenthesis] | [ 48::116] | )
[         OpenCurlyBracket] | [ 49::4  ] | {
[               Identifier] | [ 50::8  ] | Vector3
[               Identifier] | [ 50::16 ] | reflectDir
[               Assignator] | [ 50::27 ] | =
[               Identifier] | [ 50::29 ] | reflect
[          OpenParenthesis] | [ 50::36 ] | (
[                 Operator] | [ 50::37 ] | -
[               Identifier] | [ 50::38 ] | lightDir
[                    Comma] | [ 50::46 ] | ,
[               Identifier] | [ 50::48 ] | normal
[         CloseParenthesis] | [ 50::54 ] | )
[            EndOfSentence] | [ 50::55 ] | ;
[               Identifier] | [ 51::8  ] | float
[               Identifier] | [ 51::14 ] | spec
[               Assignator] | [ 51::19 ] | =
[               Identifier] | [ 51::21 ] | pow
[          OpenParenthesis] | [ 51::24 ] | (
[               Identifier] | [ 51::25 ] | max
[          OpenParenthesis] | [ 51::28 ] | (
[               Identifier] | [ 51::29 ] | dot
[          OpenParenthesis] | [ 51::32 ] | (
[               Identifier] | [ 51::33 ] | viewDir
[                    Comma] | [ 51::40 ] | ,
[               Identifier] | [ 51::42 ] | reflectDir
[         CloseParenthesis] | [ 51::52 ] | )
[                    Comma] | [ 51::53 ] | ,
[                   Number] | [ 51::55 ] | 0.0
[         CloseParenthesis] | [ 51::58 ] | )
[                    Comma] | [ 51::59 ] | ,
[               Identifier] | [ 51::61 ] | shininess
[         CloseParenthesis] | [ 51::70 ] | )
[            EndOfSentence] | [ 51::71 ] | ;
[                   Return] | [ 52::8  ] | return
[               Identifier] | [ 52::15 ] | spec
[                 Operator] | [ 52::20 ] | *
[               Identifier] | [ 52::22 ] | lightColor
[            EndOfSentence] | [ 52::32 ] | ;
[        CloseCurlyBracket] | [ 53::4  ] | }
[        CloseCurlyBracket] | [ 54::0  ] | }
[                  Comment] | [ 56::0  ] | /* Pipeline Description:
This pipeline is designed to render a 3D object by processing its vertex data and applying lighting calculations.

Vertex Shader (VertexPass):
- Transforms the input vertex positions using a model matrix to position the object correctly in the world space.
- Transforms the normals using the normal matrix for accurate lighting calculations.
- Passes UV coordinates, transformed positions, and normals to the fragment shader.

Fragment Shader (FragmentPass):
- Performs lighting calculations using ambient, diffuse, and specular components.
- Combines these lighting components with a texture sampled from the UV coordinates.
- Discards fragments where the texture's alpha value is zero.
- Sets the final pixel color based on the combined lighting and texture information.

The vertex and fragment shaders work together to accurately render the 3D object with realistic lighting and texturing.
*/
[                  Comment] | [ 73::0  ] | // Define the vertex shader stage
[             PipelineFlow] | [ 74::0  ] | VertexPass
[          OpenParenthesis] | [ 74::10 ] | (
[         CloseParenthesis] | [ 74::11 ] | )
[         OpenCurlyBracket] | [ 75::0  ] | {
[               Identifier] | [ 76::4  ] | Vector4
[               Identifier] | [ 76::12 ] | worldPosition
[               Assignator] | [ 76::26 ] | =
[               Identifier] | [ 76::28 ] | modelAttributes
[                 Accessor] | [ 76::43 ] | .
[               Identifier] | [ 76::44 ] | modelMatrix
[                 Operator] | [ 76::56 ] | *
[               Identifier] | [ 76::58 ] | Vector4
[          OpenParenthesis] | [ 76::65 ] | (
[               Identifier] | [ 76::66 ] | vertexPosition
[                    Comma] | [ 76::80 ] | ,
[                   Number] | [ 76::82 ] | 1.0
[         CloseParenthesis] | [ 76::85 ] | )
[            EndOfSentence] | [ 76::86 ] | ;
[               Identifier] | [ 77::4  ] | fragPosition
[               Assignator] | [ 77::17 ] | =
[               Identifier] | [ 77::19 ] | worldPosition
[                 Accessor] | [ 77::32 ] | .
[               Identifier] | [ 77::33 ] | xyz
[            EndOfSentence] | [ 77::36 ] | ;
[               Identifier] | [ 78::4  ] | fragNormal
[               Assignator] | [ 78::15 ] | =
[               Identifier] | [ 78::17 ] | mat3
[          OpenParenthesis] | [ 78::21 ] | (
[               Identifier] | [ 78::22 ] | modelAttributes
[                 Accessor] | [ 78::37 ] | .
[               Identifier] | [ 78::38 ] | normalMatrix
[         CloseParenthesis] | [ 78::50 ] | )
[                 Operator] | [ 78::52 ] | *
[               Identifier] | [ 78::54 ] | vertexNormal
[            EndOfSentence] | [ 78::66 ] | ;
[               Identifier] | [ 79::4  ] | fragUV
[               Assignator] | [ 79::11 ] | =
[               Identifier] | [ 79::13 ] | vertexUV
[            EndOfSentence] | [ 79::21 ] | ;
[               Identifier] | [ 81::4  ] | Vector4
[               Identifier] | [ 81::12 ] | clipSpacePosition
[               Assignator] | [ 81::30 ] | =
[               Identifier] | [ 81::32 ] | worldPosition
[            EndOfSentence] | [ 81::45 ] | ;
[               Identifier] | [ 82::4  ] | pixelPosition
[               Assignator] | [ 82::18 ] | =
[               Identifier] | [ 82::20 ] | clipSpacePosition
[            EndOfSentence] | [ 82::37 ] | ;
[        CloseCurlyBracket] | [ 83::0  ] | }
[                  Comment] | [ 85::0  ] | // Define the fragment shader stage
[             PipelineFlow] | [ 86::0  ] | FragmentPass
[          OpenParenthesis] | [ 86::12 ] | (
[         CloseParenthesis] | [ 86::13 ] | )
[         OpenCurlyBracket] | [ 87::0  ] | {
[                  Comment] | [ 88::4  ] | // Error handling example
[              IfStatement] | [ 89::4  ] | if
[          OpenParenthesis] | [ 89::7  ] | (
[               Identifier] | [ 89::8  ] | lightingConstants
[                 Accessor] | [ 89::25 ] | .
[               Identifier] | [ 89::26 ] | ambientIntensity
[                 Operator] | [ 89::43 ] | <
[                   Number] | [ 89::45 ] | 0.0
[                 Operator] | [ 89::49 ] | ||
[               Identifier] | [ 89::52 ] | lightingConstants
[                 Accessor] | [ 89::69 ] | .
[               Identifier] | [ 89::70 ] | ambientIntensity
[                 Operator] | [ 89::87 ] | >
[                   Number] | [ 89::89 ] | 1.0
[         CloseParenthesis] | [ 89::92 ] | )
[         OpenCurlyBracket] | [ 90::4  ] | {
[               Identifier] | [ 91::8  ] | raiseException
[          OpenParenthesis] | [ 91::22 ] | (
[           StringLitteral] | [ 91::23 ] | "Ambient intensity must be between 0 and 1. Current value: %d"
[                    Comma] | [ 91::85 ] | ,
[               Identifier] | [ 91::87 ] | lightingConstants
[                 Accessor] | [ 91::104] | .
[               Identifier] | [ 91::105] | ambientIntensity
[         CloseParenthesis] | [ 91::121] | )
[            EndOfSentence] | [ 91::122] | ;
[        CloseCurlyBracket] | [ 92::4  ] | }
[               Identifier] | [ 94::4  ] | Vector3
[               Identifier] | [ 94::12 ] | normal
[               Assignator] | [ 94::19 ] | =
[               Identifier] | [ 94::21 ] | normalize
[          OpenParenthesis] | [ 94::30 ] | (
[               Identifier] | [ 94::31 ] | fragNormal
[         CloseParenthesis] | [ 94::41 ] | )
[            EndOfSentence] | [ 94::42 ] | ;
[               Identifier] | [ 95::4  ] | Vector3
[               Identifier] | [ 95::12 ] | lightDir
[               Assignator] | [ 95::21 ] | =
[               Identifier] | [ 95::23 ] | normalize
[          OpenParenthesis] | [ 95::32 ] | (
[               Identifier] | [ 95::33 ] | lightingConstants
[                 Accessor] | [ 95::50 ] | .
[               Identifier] | [ 95::51 ] | lightPosition
[                 Operator] | [ 95::65 ] | -
[               Identifier] | [ 95::67 ] | fragPosition
[         CloseParenthesis] | [ 95::79 ] | )
[            EndOfSentence] | [ 95::80 ] | ;
[               Identifier] | [ 96::4  ] | Vector3
[               Identifier] | [ 96::12 ] | viewDir
[               Assignator] | [ 96::20 ] | =
[               Identifier] | [ 96::22 ] | normalize
[          OpenParenthesis] | [ 96::31 ] | (
[                 Operator] | [ 96::32 ] | -
[               Identifier] | [ 96::33 ] | fragPosition
[         CloseParenthesis] | [ 96::45 ] | )
[            EndOfSentence] | [ 96::46 ] | ;
[               Identifier] | [ 98::4  ] | Vector3
[               Identifier] | [ 98::12 ] | ambient
[               Assignator] | [ 98::20 ] | =
[               Identifier] | [ 98::22 ] | lightingConstants
[                 Accessor] | [ 98::39 ] | .
[               Identifier] | [ 98::40 ] | ambientIntensity
[                 Operator] | [ 98::57 ] | *
[               Identifier] | [ 98::59 ] | lightingConstants
[                 Accessor] | [ 98::76 ] | .
[               Identifier] | [ 98::77 ] | lightColor
[            EndOfSentence] | [ 98::87 ] | ;
[               Identifier] | [100::4  ] | Vector3
[               Identifier] | [100::12 ] | diffuse
[               Assignator] | [100::20 ] | =
[               Identifier] | [100::22 ] | Lighting
[       NamespaceSeparator] | [100::30 ] | ::
[               Identifier] | [100::32 ] | calculateDiffuse
[          OpenParenthesis] | [100::48 ] | (
[               Identifier] | [100::49 ] | normal
[                    Comma] | [100::55 ] | ,
[               Identifier] | [100::57 ] | lightDir
[                    Comma] | [100::65 ] | ,
[               Identifier] | [100::67 ] | lightingConstants
[                 Accessor] | [100::84 ] | .
[               Identifier] | [100::85 ] | lightColor
[         CloseParenthesis] | [100::95 ] | )
[            EndOfSentence] | [100::96 ] | ;
[               Identifier] | [102::4  ] | Material
[               Identifier] | [102::13 ] | material
[            EndOfSentence] | [102::21 ] | ;
[               Identifier] | [103::4  ] | Vector3
[               Identifier] | [103::12 ] | specular
[               Assignator] | [103::21 ] | =
[               Identifier] | [103::23 ] | Lighting
[       NamespaceSeparator] | [103::31 ] | ::
[               Identifier] | [103::33 ] | calculateSpecular
[          OpenParenthesis] | [103::50 ] | (
[               Identifier] | [103::51 ] | normal
[                    Comma] | [103::57 ] | ,
[               Identifier] | [103::59 ] | lightDir
[                    Comma] | [103::67 ] | ,
[               Identifier] | [103::69 ] | viewDir
[                    Comma] | [103::76 ] | ,
[               Identifier] | [103::78 ] | material
[                 Accessor] | [103::86 ] | .
[               Identifier] | [103::87 ] | shininess
[                    Comma] | [103::96 ] | ,
[               Identifier] | [103::98 ] | lightingConstants
[                 Accessor] | [103::115] | .
[               Identifier] | [103::116] | lightColor
[         CloseParenthesis] | [103::126] | )
[            EndOfSentence] | [103::127] | ;
[               Identifier] | [105::4  ] | Vector3
[               Identifier] | [105::12 ] | finalColor
[               Assignator] | [105::23 ] | =
[               Identifier] | [105::25 ] | ambient
[                 Operator] | [105::33 ] | +
[               Identifier] | [105::35 ] | diffuse
[                 Operator] | [105::43 ] | *
[               Identifier] | [105::45 ] | material
[                 Accessor] | [105::53 ] | .
[               Identifier] | [105::54 ] | diffuseColor
[                 Operator] | [105::67 ] | +
[               Identifier] | [105::69 ] | specular
[                 Operator] | [105::78 ] | *
[               Identifier] | [105::80 ] | material
[                 Accessor] | [105::88 ] | .
[               Identifier] | [105::89 ] | specularColor
[            EndOfSentence] | [105::102] | ;
[               Identifier] | [107::4  ] | Vector4
[               Identifier] | [107::12 ] | textureColor
[               Assignator] | [107::25 ] | =
[               Identifier] | [107::27 ] | diffuseTexture
[                 Accessor] | [107::41 ] | .
[               Identifier] | [107::42 ] | pixel
[          OpenParenthesis] | [107::47 ] | (
[               Identifier] | [107::48 ] | fragUV
[         CloseParenthesis] | [107::54 ] | )
[            EndOfSentence] | [107::55 ] | ;
[               Identifier] | [108::4  ] | finalColor
[                 Operator] | [108::15 ] | *=
[               Identifier] | [108::18 ] | textureColor
[                 Accessor] | [108::30 ] | .
[               Identifier] | [108::31 ] | rgb
[            EndOfSentence] | [108::34 ] | ;
[              IfStatement] | [110::4  ] | if
[          OpenParenthesis] | [110::7  ] | (
[               Identifier] | [110::8  ] | textureColor
[                 Accessor] | [110::20 ] | .
[               Identifier] | [110::21 ] | a
[                 Operator] | [110::23 ] | ==
[                   Number] | [110::26 ] | 0
[         CloseParenthesis] | [110::27 ] | )
[         OpenCurlyBracket] | [111::4  ] | {
[                  Discard] | [112::8  ] | discard
[            EndOfSentence] | [112::15 ] | ;
[        CloseCurlyBracket] | [113::4  ] | }
[               Identifier] | [115::4  ] | pixelColor
[               Assignator] | [115::15 ] | =
[               Identifier] | [115::17 ] | Vector4
[          OpenParenthesis] | [115::24 ] | (
[               Identifier] | [115::25 ] | finalColor
[                    Comma] | [115::35 ] | ,
[               Identifier] | [115::37 ] | textureColor
[                 Accessor] | [115::49 ] | .
[               Identifier] | [115::50 ] | a
[         CloseParenthesis] | [115::51 ] | )
[            EndOfSentence] | [115::52 ] | ;
[                   Number] | [117::4  ] | 10
[            EndOfSentence] | [117::6  ] | ;
[                   Number] | [118::4  ] | 10.0
[            EndOfSentence] | [118::8  ] | ;
[                   Number] | [119::4  ] | 10.0f
[            EndOfSentence] | [119::9  ] | ;
[                   Number] | [120::4  ] | .0
[            EndOfSentence] | [120::6  ] | ;
[                   Number] | [121::4  ] | .0f
[            EndOfSentence] | [121::7  ] | ;
[        CloseCurlyBracket] | [122::0  ] | }
