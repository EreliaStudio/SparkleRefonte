[                  Comment] | [  1::0  ] | // Include predefined and user-provided files
[                 #include] | [  2::0  ] | #include
[          IncludeLitteral] | [  2::9  ] | <importA>
[                  Comment] | [  4::0  ] | // Define the pipeline flow
[             PipelineFlow] | [  5::0  ] | Input
[    PipelineFlowSeparator] | [  5::6  ] | ->
[             PipelineFlow] | [  5::9  ] | VertexPass
[                Separator] | [  5::19 ] | :
[               Identifier] | [  5::21 ] | Vector3
[               Identifier] | [  5::29 ] | vertexPosition
[            EndOfSentence] | [  5::43 ] | ;
[             PipelineFlow] | [  6::0  ] | Input
[    PipelineFlowSeparator] | [  6::6  ] | ->
[             PipelineFlow] | [  6::9  ] | VertexPass
[                Separator] | [  6::19 ] | :
[               Identifier] | [  6::21 ] | Vector3
[               Identifier] | [  6::29 ] | vertexNormal
[            EndOfSentence] | [  6::41 ] | ;
[             PipelineFlow] | [  7::0  ] | Input
[    PipelineFlowSeparator] | [  7::6  ] | ->
[             PipelineFlow] | [  7::9  ] | VertexPass
[                Separator] | [  7::19 ] | :
[               Identifier] | [  7::21 ] | Vector2
[               Identifier] | [  7::29 ] | vertexUV
[            EndOfSentence] | [  7::37 ] | ;
[             PipelineFlow] | [  8::0  ] | VertexPass
[    PipelineFlowSeparator] | [  8::11 ] | ->
[             PipelineFlow] | [  8::14 ] | FragmentPass
[                Separator] | [  8::26 ] | :
[               Identifier] | [  8::28 ] | Vector3
[               Identifier] | [  8::36 ] | fragPosition
[            EndOfSentence] | [  8::48 ] | ;
[             PipelineFlow] | [  9::0  ] | VertexPass
[    PipelineFlowSeparator] | [  9::11 ] | ->
[             PipelineFlow] | [  9::14 ] | FragmentPass
[                Separator] | [  9::26 ] | :
[               Identifier] | [  9::28 ] | Vector3
[               Identifier] | [  9::36 ] | fragNormal
[            EndOfSentence] | [  9::46 ] | ;
[             PipelineFlow] | [ 10::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 10::11 ] | ->
[             PipelineFlow] | [ 10::14 ] | FragmentPass
[                Separator] | [ 10::26 ] | :
[               Identifier] | [ 10::28 ] | Vector2
[               Identifier] | [ 10::36 ] | fragUV
[            EndOfSentence] | [ 10::42 ] | ;
[                  Comment] | [ 12::0  ] | // Define custom structures
[           StructureBlock] | [ 13::0  ] | struct
[               Identifier] | [ 13::7  ] | Material
[         OpenCurlyBracket] | [ 14::0  ] | {
[               Identifier] | [ 15::4  ] | Vector3
[               Identifier] | [ 15::12 ] | diffuseColor
[            EndOfSentence] | [ 15::24 ] | ;
[               Identifier] | [ 16::4  ] | Vector3
[               Identifier] | [ 16::12 ] | specularColor
[            EndOfSentence] | [ 16::25 ] | ;
[               Identifier] | [ 17::4  ] | float
[               Identifier] | [ 17::10 ] | shininess
[            EndOfSentence] | [ 17::19 ] | ;
[        CloseCurlyBracket] | [ 18::0  ] | }
[            EndOfSentence] | [ 18::1  ] | ;
[                  Comment] | [ 20::0  ] | // Define a texture
[                  Texture] | [ 21::0  ] | Texture
[               Identifier] | [ 21::8  ] | diffuseTexture
[            EndOfSentence] | [ 21::22 ] | ;
[                  Comment] | [ 23::0  ] | // Define attribute blocks
[           AttributeBlock] | [ 24::0  ] | AttributeBlock
[               Identifier] | [ 24::15 ] | modelAttributes
[         OpenCurlyBracket] | [ 25::0  ] | {
[               Identifier] | [ 26::4  ] | Matrix4x4
[               Identifier] | [ 26::14 ] | modelMatrix
[            EndOfSentence] | [ 26::25 ] | ;
[               Identifier] | [ 27::4  ] | Matrix4x4
[               Identifier] | [ 27::14 ] | normalMatrix
[            EndOfSentence] | [ 27::26 ] | ;
[        CloseCurlyBracket] | [ 28::0  ] | }
[            EndOfSentence] | [ 28::1  ] | ;
[                  Comment] | [ 30::0  ] | // Define constant blocks
[            ConstantBlock] | [ 31::0  ] | ConstantBlock
[               Identifier] | [ 31::14 ] | lightingConstants
[         OpenCurlyBracket] | [ 32::0  ] | {
[               Identifier] | [ 33::4  ] | Vector3
[               Identifier] | [ 33::12 ] | lightPosition
[            EndOfSentence] | [ 33::25 ] | ;
[               Identifier] | [ 34::4  ] | Vector3
[               Identifier] | [ 34::12 ] | lightColor
[            EndOfSentence] | [ 34::22 ] | ;
[               Identifier] | [ 35::4  ] | float
[               Identifier] | [ 35::10 ] | ambientIntensity
[            EndOfSentence] | [ 35::26 ] | ;
[        CloseCurlyBracket] | [ 36::0  ] | }
[            EndOfSentence] | [ 36::1  ] | ;
[                  Comment] | [ 38::0  ] | // Create namespaces
[                Namespace] | [ 39::0  ] | namespace
[               Identifier] | [ 39::10 ] | Lighting
[         OpenCurlyBracket] | [ 40::0  ] | {
[           StructureBlock] | [ 41::0  ] | struct
[               Identifier] | [ 41::7  ] | Material
[         OpenCurlyBracket] | [ 42::0  ] | {
[               Identifier] | [ 43::4  ] | Vector3
[               Identifier] | [ 43::12 ] | diffuseColor
[            EndOfSentence] | [ 43::24 ] | ;
[               Identifier] | [ 44::4  ] | Vector3
[               Identifier] | [ 44::12 ] | specularColor
[            EndOfSentence] | [ 44::25 ] | ;
[               Identifier] | [ 45::4  ] | float
[               Identifier] | [ 45::10 ] | shininess
[            EndOfSentence] | [ 45::19 ] | ;
[        CloseCurlyBracket] | [ 46::0  ] | }
[            EndOfSentence] | [ 46::1  ] | ;
[           StructureBlock] | [ 47::0  ] | struct
[               Identifier] | [ 47::7  ] | Material
[         OpenCurlyBracket] | [ 48::0  ] | {
[               Identifier] | [ 49::4  ] | Vector3
[               Identifier] | [ 49::12 ] | diffuseColor
[            EndOfSentence] | [ 49::24 ] | ;
[               Identifier] | [ 50::4  ] | Vector3
[               Identifier] | [ 50::12 ] | specularColor
[            EndOfSentence] | [ 50::25 ] | ;
[               Identifier] | [ 51::4  ] | float
[               Identifier] | [ 51::10 ] | shininess
[            EndOfSentence] | [ 51::19 ] | ;
[        CloseCurlyBracket] | [ 52::0  ] | }
[            EndOfSentence] | [ 52::1  ] | ;
[           StructureBlock] | [ 54::1  ] | struct
[               Identifier] | [ 54::8  ] | Test
[         OpenCurlyBracket] | [ 55::1  ] | {
[               Identifier] | [ 56::2  ] | int
[               Identifier] | [ 56::6  ] | value
[            EndOfSentence] | [ 56::11 ] | ;
[        CloseCurlyBracket] | [ 57::1  ] | }
[            EndOfSentence] | [ 57::2  ] | ;
[               Identifier] | [ 59::4  ] | Vector3
[               Identifier] | [ 59::12 ] | calculateDiffuse
[          OpenParenthesis] | [ 59::28 ] | (
[               Identifier] | [ 59::29 ] | Vector3
[               Identifier] | [ 59::37 ] | normal
[                    Comma] | [ 59::43 ] | ,
[               Identifier] | [ 59::45 ] | Vector3
[               Identifier] | [ 59::53 ] | lightDir
[                    Comma] | [ 59::61 ] | ,
[               Identifier] | [ 59::63 ] | Vector3
[               Identifier] | [ 59::71 ] | lightColor
[         CloseParenthesis] | [ 59::81 ] | )
[         OpenCurlyBracket] | [ 60::4  ] | {
[               Identifier] | [ 61::8  ] | float
[               Identifier] | [ 61::14 ] | diff
[               Assignator] | [ 61::19 ] | =
[               Identifier] | [ 61::21 ] | max
[          OpenParenthesis] | [ 61::24 ] | (
[               Identifier] | [ 61::25 ] | dot
[          OpenParenthesis] | [ 61::28 ] | (
[               Identifier] | [ 61::29 ] | normal
[                    Comma] | [ 61::35 ] | ,
[               Identifier] | [ 61::37 ] | lightDir
[         CloseParenthesis] | [ 61::45 ] | )
[                    Comma] | [ 61::46 ] | ,
[                   Number] | [ 61::48 ] | 0.0
[         CloseParenthesis] | [ 61::51 ] | )
[            EndOfSentence] | [ 61::52 ] | ;
[                   Return] | [ 62::8  ] | return
[               Identifier] | [ 62::15 ] | diff
[                 Operator] | [ 62::20 ] | *
[               Identifier] | [ 62::22 ] | lightColor
[            EndOfSentence] | [ 62::32 ] | ;
[        CloseCurlyBracket] | [ 63::4  ] | }
[               Identifier] | [ 65::4  ] | Vector3
[               Identifier] | [ 65::12 ] | calculateSpecular
[          OpenParenthesis] | [ 65::29 ] | (
[               Identifier] | [ 65::30 ] | Vector3
[               Identifier] | [ 65::38 ] | normal
[                    Comma] | [ 65::44 ] | ,
[               Identifier] | [ 65::46 ] | Vector3
[               Identifier] | [ 65::54 ] | lightDir
[                    Comma] | [ 65::62 ] | ,
[               Identifier] | [ 65::64 ] | Vector3
[               Identifier] | [ 65::72 ] | viewDir
[                    Comma] | [ 65::79 ] | ,
[               Identifier] | [ 65::81 ] | float
[               Identifier] | [ 65::87 ] | shininess
[                    Comma] | [ 65::96 ] | ,
[               Identifier] | [ 65::98 ] | Vector3
[               Identifier] | [ 65::106] | lightColor
[         CloseParenthesis] | [ 65::116] | )
[         OpenCurlyBracket] | [ 66::4  ] | {
[               Identifier] | [ 67::8  ] | Vector3
[               Identifier] | [ 67::16 ] | reflectDir
[               Assignator] | [ 67::27 ] | =
[               Identifier] | [ 67::29 ] | reflect
[          OpenParenthesis] | [ 67::36 ] | (
[                 Operator] | [ 67::37 ] | -
[               Identifier] | [ 67::38 ] | lightDir
[                    Comma] | [ 67::46 ] | ,
[               Identifier] | [ 67::48 ] | normal
[         CloseParenthesis] | [ 67::54 ] | )
[            EndOfSentence] | [ 67::55 ] | ;
[               Identifier] | [ 68::8  ] | float
[               Identifier] | [ 68::14 ] | spec
[               Assignator] | [ 68::19 ] | =
[               Identifier] | [ 68::21 ] | pow
[          OpenParenthesis] | [ 68::24 ] | (
[               Identifier] | [ 68::25 ] | max
[          OpenParenthesis] | [ 68::28 ] | (
[               Identifier] | [ 68::29 ] | dot
[          OpenParenthesis] | [ 68::32 ] | (
[               Identifier] | [ 68::33 ] | viewDir
[                    Comma] | [ 68::40 ] | ,
[               Identifier] | [ 68::42 ] | reflectDir
[         CloseParenthesis] | [ 68::52 ] | )
[                    Comma] | [ 68::53 ] | ,
[                   Number] | [ 68::55 ] | 0.0
[         CloseParenthesis] | [ 68::58 ] | )
[                    Comma] | [ 68::59 ] | ,
[               Identifier] | [ 68::61 ] | shininess
[         CloseParenthesis] | [ 68::70 ] | )
[            EndOfSentence] | [ 68::71 ] | ;
[                   Return] | [ 69::8  ] | return
[               Identifier] | [ 69::15 ] | spec
[                 Operator] | [ 69::20 ] | *
[               Identifier] | [ 69::22 ] | lightColor
[            EndOfSentence] | [ 69::32 ] | ;
[        CloseCurlyBracket] | [ 70::4  ] | }
[        CloseCurlyBracket] | [ 71::0  ] | }
[               Identifier] | [ 73::0  ] | Vector3
[               Identifier] | [ 73::8  ] | calculateDiffuseA
[          OpenParenthesis] | [ 73::25 ] | (
[               Identifier] | [ 73::26 ] | Vector3
[               Identifier] | [ 73::34 ] | normal
[                    Comma] | [ 73::40 ] | ,
[               Identifier] | [ 73::42 ] | Vector3
[               Identifier] | [ 73::50 ] | lightDir
[                    Comma] | [ 73::58 ] | ,
[               Identifier] | [ 73::60 ] | Vector3
[               Identifier] | [ 73::68 ] | lightColor
[         CloseParenthesis] | [ 73::78 ] | )
[         OpenCurlyBracket] | [ 74::0  ] | {
[                   Return] | [ 75::4  ] | return
[               Identifier] | [ 75::11 ] | Lighting
[       NamespaceSeparator] | [ 75::19 ] | ::
[               Identifier] | [ 75::21 ] | calculateDiffuse
[          OpenParenthesis] | [ 75::37 ] | (
[               Identifier] | [ 75::38 ] | normal
[                    Comma] | [ 75::44 ] | ,
[               Identifier] | [ 75::46 ] | lightDir
[                    Comma] | [ 75::54 ] | ,
[               Identifier] | [ 75::56 ] | lightColor
[         CloseParenthesis] | [ 75::66 ] | )
[            EndOfSentence] | [ 75::67 ] | ;
[        CloseCurlyBracket] | [ 76::0  ] | }
[                  Comment] | [ 78::0  ] | /*
Pipeline Description:
This pipeline is designed to render a 3D object by processing its vertex data and applying lighting calculations.

Vertex Shader (VertexPass):
- Transforms the input vertex positions using a model matrix to position the object correctly in the world space.
- Transforms the normals using the normal matrix for accurate lighting calculations.
- Passes UV coordinates, transformed positions, and normals to the fragment shader.

Fragment Shader (FragmentPass):
- Performs lighting calculations using ambient, diffuse, and specular components.
- Combines these lighting components with a texture sampled from the UV coordinates.
- Discards fragments where the texture's alpha value is zero.
- Sets the final pixel color based on the combined lighting and texture information.

The vertex and fragment shaders work together to accurately render the 3D object with realistic lighting and texturing.
*/
[                  Comment] | [ 96::0  ] | // Define the vertex shader stage
[             PipelineFlow] | [ 97::0  ] | VertexPass
[          OpenParenthesis] | [ 97::10 ] | (
[         CloseParenthesis] | [ 97::11 ] | )
[         OpenCurlyBracket] | [ 98::0  ] | {
[               Identifier] | [ 99::4  ] | Vector4
[               Identifier] | [ 99::12 ] | worldPosition
[               Assignator] | [ 99::26 ] | =
[               Identifier] | [ 99::28 ] | modelAttributes
[                 Accessor] | [ 99::43 ] | .
[               Identifier] | [ 99::44 ] | modelMatrix
[                 Operator] | [ 99::56 ] | *
[               Identifier] | [ 99::58 ] | Vector4
[          OpenParenthesis] | [ 99::65 ] | (
[               Identifier] | [ 99::66 ] | vertexPosition
[                    Comma] | [ 99::80 ] | ,
[                   Number] | [ 99::82 ] | 1.0
[         CloseParenthesis] | [ 99::85 ] | )
[            EndOfSentence] | [ 99::86 ] | ;
[               Identifier] | [100::4  ] | fragPosition
[               Assignator] | [100::17 ] | =
[               Identifier] | [100::19 ] | worldPosition
[                 Accessor] | [100::32 ] | .
[               Identifier] | [100::33 ] | xyz
[            EndOfSentence] | [100::36 ] | ;
[               Identifier] | [101::4  ] | fragNormal
[               Assignator] | [101::15 ] | =
[               Identifier] | [101::17 ] | mat3
[          OpenParenthesis] | [101::21 ] | (
[               Identifier] | [101::22 ] | modelAttributes
[                 Accessor] | [101::37 ] | .
[               Identifier] | [101::38 ] | normalMatrix
[         CloseParenthesis] | [101::50 ] | )
[                 Operator] | [101::52 ] | *
[               Identifier] | [101::54 ] | vertexNormal
[            EndOfSentence] | [101::66 ] | ;
[               Identifier] | [102::4  ] | fragUV
[               Assignator] | [102::11 ] | =
[               Identifier] | [102::13 ] | vertexUV
[            EndOfSentence] | [102::21 ] | ;
[               Identifier] | [104::4  ] | Vector4
[               Identifier] | [104::12 ] | clipSpacePosition
[               Assignator] | [104::30 ] | =
[               Identifier] | [104::32 ] | worldPosition
[            EndOfSentence] | [104::45 ] | ;
[               Identifier] | [105::4  ] | pixelPosition
[               Assignator] | [105::18 ] | =
[               Identifier] | [105::20 ] | clipSpacePosition
[            EndOfSentence] | [105::37 ] | ;
[        CloseCurlyBracket] | [106::0  ] | }
[                  Comment] | [108::0  ] | // Define the fragment shader stage
[             PipelineFlow] | [109::0  ] | FragmentPass
[          OpenParenthesis] | [109::12 ] | (
[         CloseParenthesis] | [109::13 ] | )
[         OpenCurlyBracket] | [110::0  ] | {
[                  Comment] | [111::4  ] | // Error handling example
[              IfStatement] | [112::4  ] | if
[          OpenParenthesis] | [112::7  ] | (
[               Identifier] | [112::8  ] | lightingConstants
[                 Accessor] | [112::25 ] | .
[               Identifier] | [112::26 ] | ambientIntensity
[                 Operator] | [112::43 ] | <
[                   Number] | [112::45 ] | 0.0
[                 Operator] | [112::49 ] | ||
[               Identifier] | [112::52 ] | lightingConstants
[                 Accessor] | [112::69 ] | .
[               Identifier] | [112::70 ] | ambientIntensity
[                 Operator] | [112::87 ] | >
[                   Number] | [112::89 ] | 1.0
[         CloseParenthesis] | [112::92 ] | )
[         OpenCurlyBracket] | [113::4  ] | {
[               Identifier] | [114::8  ] | raiseException
[          OpenParenthesis] | [114::22 ] | (
[           StringLitteral] | [114::23 ] | "Ambient intensity must be between 0 and 1. Current value: %d"
[                    Comma] | [114::85 ] | ,
[               Identifier] | [114::87 ] | lightingConstants
[                 Accessor] | [114::104] | .
[               Identifier] | [114::105] | ambientIntensity
[         CloseParenthesis] | [114::121] | )
[            EndOfSentence] | [114::122] | ;
[        CloseCurlyBracket] | [115::4  ] | }
[               Identifier] | [117::4  ] | Vector3
[               Identifier] | [117::12 ] | normal
[               Assignator] | [117::19 ] | =
[               Identifier] | [117::21 ] | normalize
[          OpenParenthesis] | [117::30 ] | (
[               Identifier] | [117::31 ] | fragNormal
[         CloseParenthesis] | [117::41 ] | )
[            EndOfSentence] | [117::42 ] | ;
[               Identifier] | [118::4  ] | Vector3
[               Identifier] | [118::12 ] | lightDir
[               Assignator] | [118::21 ] | =
[               Identifier] | [118::23 ] | normalize
[          OpenParenthesis] | [118::32 ] | (
[               Identifier] | [118::33 ] | lightingConstants
[                 Accessor] | [118::50 ] | .
[               Identifier] | [118::51 ] | lightPosition
[                 Operator] | [118::65 ] | -
[               Identifier] | [118::67 ] | fragPosition
[         CloseParenthesis] | [118::79 ] | )
[            EndOfSentence] | [118::80 ] | ;
[               Identifier] | [119::4  ] | Vector3
[               Identifier] | [119::12 ] | viewDir
[               Assignator] | [119::20 ] | =
[               Identifier] | [119::22 ] | normalize
[          OpenParenthesis] | [119::31 ] | (
[                 Operator] | [119::32 ] | -
[               Identifier] | [119::33 ] | fragPosition
[         CloseParenthesis] | [119::45 ] | )
[            EndOfSentence] | [119::46 ] | ;
[               Identifier] | [121::4  ] | Vector3
[               Identifier] | [121::12 ] | ambient
[               Assignator] | [121::20 ] | =
[               Identifier] | [121::22 ] | lightingConstants
[                 Accessor] | [121::39 ] | .
[               Identifier] | [121::40 ] | ambientIntensity
[                 Operator] | [121::57 ] | *
[               Identifier] | [121::59 ] | lightingConstants
[                 Accessor] | [121::76 ] | .
[               Identifier] | [121::77 ] | lightColor
[            EndOfSentence] | [121::87 ] | ;
[               Identifier] | [123::4  ] | Vector3
[               Identifier] | [123::12 ] | diffuse
[               Assignator] | [123::20 ] | =
[               Identifier] | [123::22 ] | Lighting
[       NamespaceSeparator] | [123::30 ] | ::
[               Identifier] | [123::32 ] | calculateDiffuse
[          OpenParenthesis] | [123::48 ] | (
[               Identifier] | [123::49 ] | normal
[                    Comma] | [123::55 ] | ,
[               Identifier] | [123::57 ] | lightDir
[                    Comma] | [123::65 ] | ,
[               Identifier] | [123::67 ] | lightingConstants
[                 Accessor] | [123::84 ] | .
[               Identifier] | [123::85 ] | lightColor
[         CloseParenthesis] | [123::95 ] | )
[            EndOfSentence] | [123::96 ] | ;
[       NamespaceSeparator] | [125::4  ] | ::
[               Identifier] | [125::6  ] | Material
[               Identifier] | [125::15 ] | material
[            EndOfSentence] | [125::23 ] | ;
[               Identifier] | [126::4  ] | Vector3
[               Identifier] | [126::12 ] | specular
[               Assignator] | [126::21 ] | =
[       NamespaceSeparator] | [126::23 ] | ::
[               Identifier] | [126::25 ] | Lighting
[       NamespaceSeparator] | [126::33 ] | ::
[               Identifier] | [126::35 ] | calculateSpecular
[          OpenParenthesis] | [126::52 ] | (
[               Identifier] | [126::53 ] | normal
[                    Comma] | [126::59 ] | ,
[               Identifier] | [126::61 ] | lightDir
[                    Comma] | [126::69 ] | ,
[               Identifier] | [126::71 ] | viewDir
[                    Comma] | [126::78 ] | ,
[               Identifier] | [126::80 ] | material
[                 Accessor] | [126::88 ] | .
[               Identifier] | [126::89 ] | shininess
[                    Comma] | [126::98 ] | ,
[               Identifier] | [126::100] | lightingConstants
[                 Accessor] | [126::117] | .
[               Identifier] | [126::118] | lightColor
[         CloseParenthesis] | [126::128] | )
[            EndOfSentence] | [126::129] | ;
[               Identifier] | [128::4  ] | Vector3
[               Identifier] | [128::12 ] | finalColor
[               Assignator] | [128::23 ] | =
[               Identifier] | [128::25 ] | ambient
[                 Operator] | [128::33 ] | +
[               Identifier] | [128::35 ] | diffuse
[                 Operator] | [128::43 ] | *
[               Identifier] | [128::45 ] | material
[                 Accessor] | [128::53 ] | .
[               Identifier] | [128::54 ] | diffuseColor
[                 Operator] | [128::67 ] | +
[               Identifier] | [128::69 ] | specular
[                 Operator] | [128::78 ] | *
[               Identifier] | [128::80 ] | material
[                 Accessor] | [128::88 ] | .
[               Identifier] | [128::89 ] | specularColor
[            EndOfSentence] | [128::102] | ;
[               Identifier] | [130::4  ] | Vector4
[               Identifier] | [130::12 ] | textureColor
[               Assignator] | [130::25 ] | =
[               Identifier] | [130::27 ] | getPixel
[          OpenParenthesis] | [130::35 ] | (
[               Identifier] | [130::36 ] | diffuseTexture
[                    Comma] | [130::50 ] | ,
[               Identifier] | [130::52 ] | fragUV
[         CloseParenthesis] | [130::58 ] | )
[            EndOfSentence] | [130::59 ] | ;
[               Identifier] | [131::4  ] | finalColor
[               Assignator] | [131::15 ] | *=
[               Identifier] | [131::18 ] | textureColor
[                 Accessor] | [131::30 ] | .
[               Identifier] | [131::31 ] | rgb
[            EndOfSentence] | [131::34 ] | ;
[              IfStatement] | [133::4  ] | if
[          OpenParenthesis] | [133::7  ] | (
[               Identifier] | [133::8  ] | textureColor
[                 Accessor] | [133::20 ] | .
[               Identifier] | [133::21 ] | a
[                 Operator] | [133::23 ] | ==
[                   Number] | [133::26 ] | 0
[         CloseParenthesis] | [133::27 ] | )
[         OpenCurlyBracket] | [134::4  ] | {
[                  Discard] | [135::8  ] | discard
[            EndOfSentence] | [135::15 ] | ;
[        CloseCurlyBracket] | [136::4  ] | }
[               Identifier] | [138::4  ] | pixelColor
[               Assignator] | [138::15 ] | =
[               Identifier] | [138::17 ] | Vector4
[          OpenParenthesis] | [138::24 ] | (
[               Identifier] | [138::25 ] | finalColor
[                    Comma] | [138::35 ] | ,
[               Identifier] | [138::37 ] | textureColor
[                 Accessor] | [138::49 ] | .
[               Identifier] | [138::50 ] | a
[         CloseParenthesis] | [138::51 ] | )
[            EndOfSentence] | [138::52 ] | ;
[        CloseCurlyBracket] | [139::0  ] | }
