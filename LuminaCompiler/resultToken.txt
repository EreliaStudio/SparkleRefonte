[                  Comment] | [  1::0  ] | // Include predefined and user-provided files
[                 #include] | [  2::0  ] | #include
[          IncludeLitteral] | [  2::9  ] | <importA>
[                  Comment] | [  4::0  ] | // Define the pipeline flow
[             PipelineFlow] | [  5::0  ] | Input
[    PipelineFlowSeparator] | [  5::6  ] | ->
[             PipelineFlow] | [  5::9  ] | VertexPass
[                Separator] | [  5::19 ] | :
[               Identifier] | [  5::21 ] | Vector3
[               Identifier] | [  5::29 ] | vertexPosition
[            EndOfSentence] | [  5::43 ] | ;
[             PipelineFlow] | [  6::0  ] | Input
[    PipelineFlowSeparator] | [  6::6  ] | ->
[             PipelineFlow] | [  6::9  ] | VertexPass
[                Separator] | [  6::19 ] | :
[               Identifier] | [  6::21 ] | Vector3
[               Identifier] | [  6::29 ] | vertexNormal
[            EndOfSentence] | [  6::41 ] | ;
[             PipelineFlow] | [  7::0  ] | Input
[    PipelineFlowSeparator] | [  7::6  ] | ->
[             PipelineFlow] | [  7::9  ] | VertexPass
[                Separator] | [  7::19 ] | :
[               Identifier] | [  7::21 ] | vec2
[               Identifier] | [  7::26 ] | vertexUV
[            EndOfSentence] | [  7::34 ] | ;
[             PipelineFlow] | [  8::0  ] | VertexPass
[    PipelineFlowSeparator] | [  8::11 ] | ->
[             PipelineFlow] | [  8::14 ] | FragmentPass
[                Separator] | [  8::26 ] | :
[               Identifier] | [  8::28 ] | Vector3
[               Identifier] | [  8::36 ] | fragPosition
[            EndOfSentence] | [  8::48 ] | ;
[             PipelineFlow] | [  9::0  ] | VertexPass
[    PipelineFlowSeparator] | [  9::11 ] | ->
[             PipelineFlow] | [  9::14 ] | FragmentPass
[                Separator] | [  9::26 ] | :
[               Identifier] | [  9::28 ] | Vector3
[               Identifier] | [  9::36 ] | fragNormal
[            EndOfSentence] | [  9::46 ] | ;
[             PipelineFlow] | [ 10::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 10::11 ] | ->
[             PipelineFlow] | [ 10::14 ] | FragmentPass
[                Separator] | [ 10::26 ] | :
[               Identifier] | [ 10::28 ] | vec2
[               Identifier] | [ 10::33 ] | fragUV
[            EndOfSentence] | [ 10::39 ] | ;
[                  Comment] | [ 12::0  ] | // Define custom structures
[           StructureBlock] | [ 13::0  ] | struct
[               Identifier] | [ 13::7  ] | Material
[         OpenCurlyBracket] | [ 14::0  ] | {
[               Identifier] | [ 15::4  ] | Vector3
[               Identifier] | [ 15::12 ] | diffuseColor
[            EndOfSentence] | [ 15::24 ] | ;
[               Identifier] | [ 16::4  ] | Vector3
[               Identifier] | [ 16::12 ] | specularColor
[            EndOfSentence] | [ 16::25 ] | ;
[               Identifier] | [ 17::4  ] | float
[               Identifier] | [ 17::10 ] | shininess
[            EndOfSentence] | [ 17::19 ] | ;
[        CloseCurlyBracket] | [ 18::0  ] | }
[            EndOfSentence] | [ 18::1  ] | ;
[                  Comment] | [ 20::0  ] | // Define a texture
[                  Texture] | [ 21::0  ] | Texture
[               Identifier] | [ 21::8  ] | diffuseTexture
[            EndOfSentence] | [ 21::22 ] | ;
[                  Comment] | [ 23::0  ] | // Define attribute blocks
[           AttributeBlock] | [ 24::0  ] | AttributeBlock
[               Identifier] | [ 24::15 ] | modelAttributes
[         OpenCurlyBracket] | [ 25::0  ] | {
[               Identifier] | [ 26::4  ] | Matrix4x4
[               Identifier] | [ 26::14 ] | modelMatrix
[            EndOfSentence] | [ 26::25 ] | ;
[               Identifier] | [ 27::4  ] | Matrix4x4
[               Identifier] | [ 27::14 ] | normalMatrix
[            EndOfSentence] | [ 27::26 ] | ;
[        CloseCurlyBracket] | [ 28::0  ] | }
[            EndOfSentence] | [ 28::1  ] | ;
[                  Comment] | [ 30::0  ] | // Define constant blocks
[            ConstantBlock] | [ 31::0  ] | ConstantBlock
[               Identifier] | [ 31::14 ] | lightingConstants
[         OpenCurlyBracket] | [ 32::0  ] | {
[               Identifier] | [ 33::4  ] | Vector3
[               Identifier] | [ 33::12 ] | lightPosition
[            EndOfSentence] | [ 33::25 ] | ;
[               Identifier] | [ 34::4  ] | Vector3
[               Identifier] | [ 34::12 ] | lightColor
[            EndOfSentence] | [ 34::22 ] | ;
[               Identifier] | [ 35::4  ] | float
[               Identifier] | [ 35::10 ] | ambientIntensity
[            EndOfSentence] | [ 35::26 ] | ;
[        CloseCurlyBracket] | [ 36::0  ] | }
[            EndOfSentence] | [ 36::1  ] | ;
[                  Comment] | [ 38::0  ] | // Create namespaces
[                Namespace] | [ 39::0  ] | namespace
[               Identifier] | [ 39::10 ] | Lighting
[         OpenCurlyBracket] | [ 40::0  ] | {
[           StructureBlock] | [ 41::1  ] | struct
[               Identifier] | [ 41::8  ] | Test
[         OpenCurlyBracket] | [ 42::1  ] | {
[               Identifier] | [ 43::2  ] | int
[               Identifier] | [ 43::6  ] | value
[            EndOfSentence] | [ 43::11 ] | ;
[        CloseCurlyBracket] | [ 44::1  ] | }
[            EndOfSentence] | [ 44::2  ] | ;
[               Identifier] | [ 46::4  ] | Vector3
[               Identifier] | [ 46::12 ] | calculateDiffuse
[          OpenParenthesis] | [ 46::28 ] | (
[               Identifier] | [ 46::29 ] | Vector3
[               Identifier] | [ 46::37 ] | normal
[                    Comma] | [ 46::43 ] | ,
[               Identifier] | [ 46::45 ] | Vector3
[               Identifier] | [ 46::53 ] | lightDir
[                    Comma] | [ 46::61 ] | ,
[               Identifier] | [ 46::63 ] | Vector3
[               Identifier] | [ 46::71 ] | lightColor
[         CloseParenthesis] | [ 46::81 ] | )
[         OpenCurlyBracket] | [ 47::4  ] | {
[               Identifier] | [ 48::8  ] | float
[               Identifier] | [ 48::14 ] | diff
[               Assignator] | [ 48::19 ] | =
[               Identifier] | [ 48::21 ] | max
[          OpenParenthesis] | [ 48::24 ] | (
[               Identifier] | [ 48::25 ] | dot
[          OpenParenthesis] | [ 48::28 ] | (
[               Identifier] | [ 48::29 ] | normal
[                    Comma] | [ 48::35 ] | ,
[               Identifier] | [ 48::37 ] | lightDir
[         CloseParenthesis] | [ 48::45 ] | )
[                    Comma] | [ 48::46 ] | ,
[                   Number] | [ 48::48 ] | 0.0
[         CloseParenthesis] | [ 48::51 ] | )
[            EndOfSentence] | [ 48::52 ] | ;
[                   Return] | [ 49::8  ] | return
[               Identifier] | [ 49::15 ] | diff
[                 Operator] | [ 49::20 ] | *
[               Identifier] | [ 49::22 ] | lightColor
[            EndOfSentence] | [ 49::32 ] | ;
[        CloseCurlyBracket] | [ 50::4  ] | }
[               Identifier] | [ 52::4  ] | Vector3
[               Identifier] | [ 52::12 ] | calculateSpecular
[          OpenParenthesis] | [ 52::29 ] | (
[               Identifier] | [ 52::30 ] | Vector3
[               Identifier] | [ 52::38 ] | normal
[                    Comma] | [ 52::44 ] | ,
[               Identifier] | [ 52::46 ] | Vector3
[               Identifier] | [ 52::54 ] | lightDir
[                    Comma] | [ 52::62 ] | ,
[               Identifier] | [ 52::64 ] | Vector3
[               Identifier] | [ 52::72 ] | viewDir
[                    Comma] | [ 52::79 ] | ,
[               Identifier] | [ 52::81 ] | float
[               Identifier] | [ 52::87 ] | shininess
[                    Comma] | [ 52::96 ] | ,
[               Identifier] | [ 52::98 ] | Vector3
[               Identifier] | [ 52::106] | lightColor
[         CloseParenthesis] | [ 52::116] | )
[         OpenCurlyBracket] | [ 53::4  ] | {
[               Identifier] | [ 54::8  ] | Vector3
[               Identifier] | [ 54::16 ] | reflectDir
[               Assignator] | [ 54::27 ] | =
[               Identifier] | [ 54::29 ] | reflect
[          OpenParenthesis] | [ 54::36 ] | (
[                 Operator] | [ 54::37 ] | -
[               Identifier] | [ 54::38 ] | lightDir
[                    Comma] | [ 54::46 ] | ,
[               Identifier] | [ 54::48 ] | normal
[         CloseParenthesis] | [ 54::54 ] | )
[            EndOfSentence] | [ 54::55 ] | ;
[               Identifier] | [ 55::8  ] | float
[               Identifier] | [ 55::14 ] | spec
[               Assignator] | [ 55::19 ] | =
[               Identifier] | [ 55::21 ] | pow
[          OpenParenthesis] | [ 55::24 ] | (
[               Identifier] | [ 55::25 ] | max
[          OpenParenthesis] | [ 55::28 ] | (
[               Identifier] | [ 55::29 ] | dot
[          OpenParenthesis] | [ 55::32 ] | (
[               Identifier] | [ 55::33 ] | viewDir
[                    Comma] | [ 55::40 ] | ,
[               Identifier] | [ 55::42 ] | reflectDir
[         CloseParenthesis] | [ 55::52 ] | )
[                    Comma] | [ 55::53 ] | ,
[                   Number] | [ 55::55 ] | 0.0
[         CloseParenthesis] | [ 55::58 ] | )
[                    Comma] | [ 55::59 ] | ,
[               Identifier] | [ 55::61 ] | shininess
[         CloseParenthesis] | [ 55::70 ] | )
[            EndOfSentence] | [ 55::71 ] | ;
[                   Return] | [ 56::8  ] | return
[               Identifier] | [ 56::15 ] | spec
[                 Operator] | [ 56::20 ] | *
[               Identifier] | [ 56::22 ] | lightColor
[            EndOfSentence] | [ 56::32 ] | ;
[        CloseCurlyBracket] | [ 57::4  ] | }
[        CloseCurlyBracket] | [ 58::0  ] | }
[                  Comment] | [ 60::0  ] | /*
Pipeline Description:
This pipeline is designed to render a 3D object by processing its vertex data and applying lighting calculations.

Vertex Shader (VertexPass):
- Transforms the input vertex positions using a model matrix to position the object correctly in the world space.
- Transforms the normals using the normal matrix for accurate lighting calculations.
- Passes UV coordinates, transformed positions, and normals to the fragment shader.

Fragment Shader (FragmentPass):
- Performs lighting calculations using ambient, diffuse, and specular components.
- Combines these lighting components with a texture sampled from the UV coordinates.
- Discards fragments where the texture's alpha value is zero.
- Sets the final pixel color based on the combined lighting and texture information.

The vertex and fragment shaders work together to accurately render the 3D object with realistic lighting and texturing.
*/
[                  Comment] | [ 78::0  ] | // Define the vertex shader stage
[             PipelineFlow] | [ 79::0  ] | VertexPass
[          OpenParenthesis] | [ 79::10 ] | (
[         CloseParenthesis] | [ 79::11 ] | )
[         OpenCurlyBracket] | [ 80::0  ] | {
[               Identifier] | [ 81::4  ] | Vector4
[               Identifier] | [ 81::12 ] | worldPosition
[               Assignator] | [ 81::26 ] | =
[               Identifier] | [ 81::28 ] | modelAttributes
[                 Accessor] | [ 81::43 ] | .
[               Identifier] | [ 81::44 ] | modelMatrix
[                 Operator] | [ 81::56 ] | *
[               Identifier] | [ 81::58 ] | Vector4
[          OpenParenthesis] | [ 81::65 ] | (
[               Identifier] | [ 81::66 ] | vertexPosition
[                    Comma] | [ 81::80 ] | ,
[                   Number] | [ 81::82 ] | 1.0
[         CloseParenthesis] | [ 81::85 ] | )
[            EndOfSentence] | [ 81::86 ] | ;
[               Identifier] | [ 82::4  ] | fragPosition
[               Assignator] | [ 82::17 ] | =
[               Identifier] | [ 82::19 ] | worldPosition
[                 Accessor] | [ 82::32 ] | .
[               Identifier] | [ 82::33 ] | xyz
[            EndOfSentence] | [ 82::36 ] | ;
[               Identifier] | [ 83::4  ] | fragNormal
[               Assignator] | [ 83::15 ] | =
[               Identifier] | [ 83::17 ] | mat3
[          OpenParenthesis] | [ 83::21 ] | (
[               Identifier] | [ 83::22 ] | modelAttributes
[                 Accessor] | [ 83::37 ] | .
[               Identifier] | [ 83::38 ] | normalMatrix
[         CloseParenthesis] | [ 83::50 ] | )
[                 Operator] | [ 83::52 ] | *
[               Identifier] | [ 83::54 ] | vertexNormal
[            EndOfSentence] | [ 83::66 ] | ;
[               Identifier] | [ 84::4  ] | fragUV
[               Assignator] | [ 84::11 ] | =
[               Identifier] | [ 84::13 ] | vertexUV
[            EndOfSentence] | [ 84::21 ] | ;
[               Identifier] | [ 86::4  ] | Vector4
[               Identifier] | [ 86::12 ] | clipSpacePosition
[               Assignator] | [ 86::30 ] | =
[               Identifier] | [ 86::32 ] | worldPosition
[            EndOfSentence] | [ 86::45 ] | ;
[               Identifier] | [ 87::4  ] | pixelPosition
[               Assignator] | [ 87::18 ] | =
[               Identifier] | [ 87::20 ] | clipSpacePosition
[            EndOfSentence] | [ 87::37 ] | ;
[        CloseCurlyBracket] | [ 88::0  ] | }
[                  Comment] | [ 90::0  ] | // Define the fragment shader stage
[             PipelineFlow] | [ 91::0  ] | FragmentPass
[          OpenParenthesis] | [ 91::12 ] | (
[         CloseParenthesis] | [ 91::13 ] | )
[         OpenCurlyBracket] | [ 92::0  ] | {
[                  Comment] | [ 93::4  ] | // Error handling example
[              IfStatement] | [ 94::4  ] | if
[          OpenParenthesis] | [ 94::7  ] | (
[               Identifier] | [ 94::8  ] | lightingConstants
[                 Accessor] | [ 94::25 ] | .
[               Identifier] | [ 94::26 ] | ambientIntensity
[                 Operator] | [ 94::43 ] | <
[                   Number] | [ 94::45 ] | 0.0
[                 Operator] | [ 94::49 ] | ||
[               Identifier] | [ 94::52 ] | lightingConstants
[                 Accessor] | [ 94::69 ] | .
[               Identifier] | [ 94::70 ] | ambientIntensity
[                 Operator] | [ 94::87 ] | >
[                   Number] | [ 94::89 ] | 1.0
[         CloseParenthesis] | [ 94::92 ] | )
[         OpenCurlyBracket] | [ 95::4  ] | {
[               Identifier] | [ 96::8  ] | raiseException
[          OpenParenthesis] | [ 96::22 ] | (
[           StringLitteral] | [ 96::23 ] | "Ambient intensity must be between 0 and 1. Current value: %d"
[                    Comma] | [ 96::85 ] | ,
[               Identifier] | [ 96::87 ] | lightingConstants
[                 Accessor] | [ 96::104] | .
[               Identifier] | [ 96::105] | ambientIntensity
[         CloseParenthesis] | [ 96::121] | )
[            EndOfSentence] | [ 96::122] | ;
[        CloseCurlyBracket] | [ 97::4  ] | }
[               Identifier] | [ 99::4  ] | Vector3
[               Identifier] | [ 99::12 ] | normal
[               Assignator] | [ 99::19 ] | =
[               Identifier] | [ 99::21 ] | normalize
[          OpenParenthesis] | [ 99::30 ] | (
[               Identifier] | [ 99::31 ] | fragNormal
[         CloseParenthesis] | [ 99::41 ] | )
[            EndOfSentence] | [ 99::42 ] | ;
[               Identifier] | [100::4  ] | Vector3
[               Identifier] | [100::12 ] | lightDir
[               Assignator] | [100::21 ] | =
[               Identifier] | [100::23 ] | normalize
[          OpenParenthesis] | [100::32 ] | (
[               Identifier] | [100::33 ] | lightingConstants
[                 Accessor] | [100::50 ] | .
[               Identifier] | [100::51 ] | lightPosition
[                 Operator] | [100::65 ] | -
[               Identifier] | [100::67 ] | fragPosition
[         CloseParenthesis] | [100::79 ] | )
[            EndOfSentence] | [100::80 ] | ;
[               Identifier] | [101::4  ] | Vector3
[               Identifier] | [101::12 ] | viewDir
[               Assignator] | [101::20 ] | =
[               Identifier] | [101::22 ] | normalize
[          OpenParenthesis] | [101::31 ] | (
[                 Operator] | [101::32 ] | -
[               Identifier] | [101::33 ] | fragPosition
[         CloseParenthesis] | [101::45 ] | )
[            EndOfSentence] | [101::46 ] | ;
[               Identifier] | [103::4  ] | Vector3
[               Identifier] | [103::12 ] | ambient
[               Assignator] | [103::20 ] | =
[               Identifier] | [103::22 ] | lightingConstants
[                 Accessor] | [103::39 ] | .
[               Identifier] | [103::40 ] | ambientIntensity
[                 Operator] | [103::57 ] | *
[               Identifier] | [103::59 ] | lightingConstants
[                 Accessor] | [103::76 ] | .
[               Identifier] | [103::77 ] | lightColor
[            EndOfSentence] | [103::87 ] | ;
[               Identifier] | [105::4  ] | Vector3
[               Identifier] | [105::12 ] | diffuse
[               Assignator] | [105::20 ] | =
[               Identifier] | [105::22 ] | Lighting
[       NamespaceSeparator] | [105::30 ] | ::
[               Identifier] | [105::32 ] | calculateDiffuse
[          OpenParenthesis] | [105::48 ] | (
[               Identifier] | [105::49 ] | normal
[                    Comma] | [105::55 ] | ,
[               Identifier] | [105::57 ] | lightDir
[                    Comma] | [105::65 ] | ,
[               Identifier] | [105::67 ] | lightingConstants
[                 Accessor] | [105::84 ] | .
[               Identifier] | [105::85 ] | lightColor
[         CloseParenthesis] | [105::95 ] | )
[            EndOfSentence] | [105::96 ] | ;
[       NamespaceSeparator] | [107::4  ] | ::
[               Identifier] | [107::6  ] | Material
[               Identifier] | [107::15 ] | material
[            EndOfSentence] | [107::23 ] | ;
[               Identifier] | [108::4  ] | Vector3
[               Identifier] | [108::12 ] | specular
[               Assignator] | [108::21 ] | =
[       NamespaceSeparator] | [108::23 ] | ::
[               Identifier] | [108::25 ] | Lighting
[       NamespaceSeparator] | [108::33 ] | ::
[               Identifier] | [108::35 ] | calculateSpecular
[          OpenParenthesis] | [108::52 ] | (
[               Identifier] | [108::53 ] | normal
[                    Comma] | [108::59 ] | ,
[               Identifier] | [108::61 ] | lightDir
[                    Comma] | [108::69 ] | ,
[               Identifier] | [108::71 ] | viewDir
[                    Comma] | [108::78 ] | ,
[               Identifier] | [108::80 ] | material
[                 Accessor] | [108::88 ] | .
[               Identifier] | [108::89 ] | shininess
[                    Comma] | [108::98 ] | ,
[               Identifier] | [108::100] | lightingConstants
[                 Accessor] | [108::117] | .
[               Identifier] | [108::118] | lightColor
[         CloseParenthesis] | [108::128] | )
[            EndOfSentence] | [108::129] | ;
[               Identifier] | [110::4  ] | Vector3
[               Identifier] | [110::12 ] | finalColor
[               Assignator] | [110::23 ] | =
[               Identifier] | [110::25 ] | ambient
[                 Operator] | [110::33 ] | +
[               Identifier] | [110::35 ] | diffuse
[                 Operator] | [110::43 ] | *
[               Identifier] | [110::45 ] | material
[                 Accessor] | [110::53 ] | .
[               Identifier] | [110::54 ] | diffuseColor
[                 Operator] | [110::67 ] | +
[               Identifier] | [110::69 ] | specular
[                 Operator] | [110::78 ] | *
[               Identifier] | [110::80 ] | material
[                 Accessor] | [110::88 ] | .
[               Identifier] | [110::89 ] | specularColor
[            EndOfSentence] | [110::102] | ;
[               Identifier] | [112::4  ] | Vector4
[               Identifier] | [112::12 ] | textureColor
[               Assignator] | [112::25 ] | =
[               Identifier] | [112::27 ] | getPixel
[          OpenParenthesis] | [112::35 ] | (
[               Identifier] | [112::36 ] | diffuseTexture
[                    Comma] | [112::50 ] | ,
[               Identifier] | [112::52 ] | fragUV
[         CloseParenthesis] | [112::58 ] | )
[            EndOfSentence] | [112::59 ] | ;
[               Identifier] | [113::4  ] | finalColor
[               Assignator] | [113::15 ] | *=
[               Identifier] | [113::18 ] | textureColor
[                 Accessor] | [113::30 ] | .
[               Identifier] | [113::31 ] | rgb
[            EndOfSentence] | [113::34 ] | ;
[              IfStatement] | [115::4  ] | if
[          OpenParenthesis] | [115::7  ] | (
[               Identifier] | [115::8  ] | textureColor
[                 Accessor] | [115::20 ] | .
[               Identifier] | [115::21 ] | a
[                 Operator] | [115::23 ] | ==
[                   Number] | [115::26 ] | 0
[         CloseParenthesis] | [115::27 ] | )
[         OpenCurlyBracket] | [116::4  ] | {
[                  Discard] | [117::8  ] | discard
[            EndOfSentence] | [117::15 ] | ;
[        CloseCurlyBracket] | [118::4  ] | }
[               Identifier] | [120::4  ] | pixelColor
[               Assignator] | [120::15 ] | =
[               Identifier] | [120::17 ] | Vector4
[          OpenParenthesis] | [120::24 ] | (
[               Identifier] | [120::25 ] | finalColor
[                    Comma] | [120::35 ] | ,
[               Identifier] | [120::37 ] | textureColor
[                 Accessor] | [120::49 ] | .
[               Identifier] | [120::50 ] | a
[         CloseParenthesis] | [120::51 ] | )
[            EndOfSentence] | [120::52 ] | ;
[        CloseCurlyBracket] | [121::0  ] | }
