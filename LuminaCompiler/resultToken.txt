[                  Comment] | [  1::0  ] | // Include predefined and user-provided files
[                 #include] | [  2::0  ] | #include
[          IncludeLitteral] | [  2::9  ] | <importA>
[                 #include] | [  3::0  ] | #include
[           StringLitteral] | [  3::9  ] | "importB"
[                  Comment] | [  5::0  ] | // Define the pipeline flow
[             PipelineFlow] | [  6::0  ] | Input
[    PipelineFlowSeparator] | [  6::6  ] | ->
[             PipelineFlow] | [  6::9  ] | VertexPass
[                Separator] | [  6::19 ] | :
[               Identifier] | [  6::21 ] | Vector3
[               Identifier] | [  6::29 ] | vertexPosition
[            EndOfSentence] | [  6::43 ] | ;
[             PipelineFlow] | [  7::0  ] | Input
[    PipelineFlowSeparator] | [  7::6  ] | ->
[             PipelineFlow] | [  7::9  ] | VertexPass
[                Separator] | [  7::19 ] | :
[               Identifier] | [  7::21 ] | Vector3
[               Identifier] | [  7::29 ] | vertexNormal
[            EndOfSentence] | [  7::41 ] | ;
[             PipelineFlow] | [  8::0  ] | Input
[    PipelineFlowSeparator] | [  8::6  ] | ->
[             PipelineFlow] | [  8::9  ] | VertexPass
[                Separator] | [  8::19 ] | :
[               Identifier] | [  8::21 ] | Vector2
[               Identifier] | [  8::29 ] | vertexUV
[            EndOfSentence] | [  8::37 ] | ;
[             PipelineFlow] | [  9::0  ] | VertexPass
[    PipelineFlowSeparator] | [  9::11 ] | ->
[             PipelineFlow] | [  9::14 ] | FragmentPass
[                Separator] | [  9::26 ] | :
[               Identifier] | [  9::28 ] | Vector3
[               Identifier] | [  9::36 ] | fragPosition
[            EndOfSentence] | [  9::48 ] | ;
[             PipelineFlow] | [ 10::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 10::11 ] | ->
[             PipelineFlow] | [ 10::14 ] | FragmentPass
[                Separator] | [ 10::26 ] | :
[               Identifier] | [ 10::28 ] | Vector3
[               Identifier] | [ 10::36 ] | fragNormal
[            EndOfSentence] | [ 10::46 ] | ;
[             PipelineFlow] | [ 11::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 11::11 ] | ->
[             PipelineFlow] | [ 11::14 ] | FragmentPass
[                Separator] | [ 11::26 ] | :
[               Identifier] | [ 11::28 ] | Vector2
[               Identifier] | [ 11::36 ] | fragUV
[            EndOfSentence] | [ 11::42 ] | ;
[                  Comment] | [ 13::0  ] | // Define custom structures
[           StructureBlock] | [ 14::0  ] | struct
[               Identifier] | [ 14::7  ] | Material
[         OpenCurlyBracket] | [ 15::0  ] | {
[               Identifier] | [ 16::4  ] | Vector3
[               Identifier] | [ 16::12 ] | diffuseColor
[            EndOfSentence] | [ 16::24 ] | ;
[               Identifier] | [ 17::4  ] | Vector3
[               Identifier] | [ 17::12 ] | specularColor
[            EndOfSentence] | [ 17::25 ] | ;
[               Identifier] | [ 18::4  ] | float
[               Identifier] | [ 18::10 ] | shininess
[              OpenBracket] | [ 18::19 ] | [
[                   Number] | [ 18::20 ] | 4
[             CloseBracket] | [ 18::21 ] | ]
[            EndOfSentence] | [ 18::22 ] | ;
[        CloseCurlyBracket] | [ 19::0  ] | }
[            EndOfSentence] | [ 19::1  ] | ;
[                  Comment] | [ 21::0  ] | // Define a texture
[                  Texture] | [ 22::0  ] | Texture
[               Identifier] | [ 22::8  ] | diffuseTexture
[            EndOfSentence] | [ 22::22 ] | ;
[                  Comment] | [ 24::0  ] | // Define attribute blocks
[           AttributeBlock] | [ 25::0  ] | AttributeBlock
[               Identifier] | [ 25::15 ] | modelAttributes
[         OpenCurlyBracket] | [ 26::0  ] | {
[               Identifier] | [ 27::4  ] | Matrix4x4
[               Identifier] | [ 27::14 ] | modelMatrix
[            EndOfSentence] | [ 27::25 ] | ;
[               Identifier] | [ 28::4  ] | Matrix4x4
[               Identifier] | [ 28::14 ] | normalMatrix
[            EndOfSentence] | [ 28::26 ] | ;
[        CloseCurlyBracket] | [ 29::0  ] | }
[            EndOfSentence] | [ 29::1  ] | ;
[                  Comment] | [ 31::0  ] | // Define constant blocks
[            ConstantBlock] | [ 32::0  ] | ConstantBlock
[               Identifier] | [ 32::14 ] | lightingConstants
[         OpenCurlyBracket] | [ 33::0  ] | {
[               Identifier] | [ 34::4  ] | Vector3
[               Identifier] | [ 34::12 ] | lightPosition
[            EndOfSentence] | [ 34::25 ] | ;
[               Identifier] | [ 35::4  ] | Vector3
[               Identifier] | [ 35::12 ] | lightColor
[            EndOfSentence] | [ 35::22 ] | ;
[               Identifier] | [ 36::4  ] | float
[               Identifier] | [ 36::10 ] | ambientIntensity
[            EndOfSentence] | [ 36::26 ] | ;
[        CloseCurlyBracket] | [ 37::0  ] | }
[            EndOfSentence] | [ 37::1  ] | ;
[                  Comment] | [ 39::0  ] | // Create namespaces
[                Namespace] | [ 40::0  ] | namespace
[               Identifier] | [ 40::10 ] | Lighting
[         OpenCurlyBracket] | [ 41::0  ] | {
[                  Texture] | [ 42::4  ] | Texture
[               Identifier] | [ 42::12 ] | diffuseTexture2
[            EndOfSentence] | [ 42::27 ] | ;
[           StructureBlock] | [ 44::4  ] | struct
[               Identifier] | [ 44::11 ] | Material
[         OpenCurlyBracket] | [ 45::4  ] | {
[               Identifier] | [ 46::8  ] | Vector3
[               Identifier] | [ 46::16 ] | diffuseColor
[            EndOfSentence] | [ 46::28 ] | ;
[               Identifier] | [ 47::8  ] | Vector3
[               Identifier] | [ 47::16 ] | specularColor
[            EndOfSentence] | [ 47::29 ] | ;
[               Identifier] | [ 48::8  ] | float
[               Identifier] | [ 48::14 ] | shininess
[              OpenBracket] | [ 48::23 ] | [
[                   Number] | [ 48::24 ] | 4
[             CloseBracket] | [ 48::25 ] | ]
[            EndOfSentence] | [ 48::26 ] | ;
[        CloseCurlyBracket] | [ 49::4  ] | }
[            EndOfSentence] | [ 49::5  ] | ;
[               Identifier] | [ 51::4  ] | Vector3
[               Identifier] | [ 51::12 ] | calculateDiffuse
[          OpenParenthesis] | [ 51::28 ] | (
[               Identifier] | [ 51::29 ] | Vector3
[               Identifier] | [ 51::37 ] | normal
[                    Comma] | [ 51::43 ] | ,
[               Identifier] | [ 51::45 ] | Vector3
[               Identifier] | [ 51::53 ] | lightDir
[                    Comma] | [ 51::61 ] | ,
[               Identifier] | [ 51::63 ] | Vector3
[               Identifier] | [ 51::71 ] | lightColor
[         CloseParenthesis] | [ 51::81 ] | )
[         OpenCurlyBracket] | [ 52::4  ] | {
[               Identifier] | [ 53::8  ] | float
[               Identifier] | [ 53::14 ] | diff
[               Assignator] | [ 53::19 ] | =
[               Identifier] | [ 53::21 ] | max
[          OpenParenthesis] | [ 53::24 ] | (
[               Identifier] | [ 53::25 ] | dot
[          OpenParenthesis] | [ 53::28 ] | (
[               Identifier] | [ 53::29 ] | normal
[                    Comma] | [ 53::35 ] | ,
[               Identifier] | [ 53::37 ] | lightDir
[         CloseParenthesis] | [ 53::45 ] | )
[                    Comma] | [ 53::46 ] | ,
[                   Number] | [ 53::48 ] | 0.0
[         CloseParenthesis] | [ 53::51 ] | )
[            EndOfSentence] | [ 53::52 ] | ;
[                   Return] | [ 54::8  ] | return
[               Identifier] | [ 54::15 ] | diff
[                 Operator] | [ 54::20 ] | *
[               Identifier] | [ 54::22 ] | lightColor
[            EndOfSentence] | [ 54::32 ] | ;
[        CloseCurlyBracket] | [ 55::4  ] | }
[               Identifier] | [ 58::4  ] | Vector3
[               Identifier] | [ 58::12 ] | calculateDiffuse
[          OpenParenthesis] | [ 58::28 ] | (
[               Identifier] | [ 58::29 ] | Vector3
[               Identifier] | [ 58::37 ] | normal
[                    Comma] | [ 58::43 ] | ,
[               Identifier] | [ 58::45 ] | Vector3
[               Identifier] | [ 58::53 ] | lightDir
[                    Comma] | [ 58::61 ] | ,
[               Identifier] | [ 58::63 ] | Vector4
[               Identifier] | [ 58::71 ] | lightColor
[         CloseParenthesis] | [ 58::81 ] | )
[         OpenCurlyBracket] | [ 59::4  ] | {
[               Identifier] | [ 60::8  ] | float
[               Identifier] | [ 60::14 ] | diff
[               Assignator] | [ 60::19 ] | =
[               Identifier] | [ 60::21 ] | max
[          OpenParenthesis] | [ 60::24 ] | (
[               Identifier] | [ 60::25 ] | dot
[          OpenParenthesis] | [ 60::28 ] | (
[               Identifier] | [ 60::29 ] | normal
[                    Comma] | [ 60::35 ] | ,
[               Identifier] | [ 60::37 ] | lightDir
[         CloseParenthesis] | [ 60::45 ] | )
[                    Comma] | [ 60::46 ] | ,
[                   Number] | [ 60::48 ] | 0.0
[         CloseParenthesis] | [ 60::51 ] | )
[            EndOfSentence] | [ 60::52 ] | ;
[                   Return] | [ 61::8  ] | return
[               Identifier] | [ 61::15 ] | diff
[                 Operator] | [ 61::20 ] | *
[               Identifier] | [ 61::22 ] | lightColor
[            EndOfSentence] | [ 61::32 ] | ;
[        CloseCurlyBracket] | [ 62::4  ] | }
[               Identifier] | [ 64::4  ] | Vector3
[               Identifier] | [ 64::12 ] | calculateSpecular
[          OpenParenthesis] | [ 64::29 ] | (
[               Identifier] | [ 64::30 ] | Vector3
[               Identifier] | [ 64::38 ] | normal
[                    Comma] | [ 64::44 ] | ,
[               Identifier] | [ 64::46 ] | Vector3
[               Identifier] | [ 64::54 ] | lightDir
[                    Comma] | [ 64::62 ] | ,
[               Identifier] | [ 64::64 ] | Vector3
[               Identifier] | [ 64::72 ] | viewDir
[                    Comma] | [ 64::79 ] | ,
[               Identifier] | [ 64::81 ] | float
[               Identifier] | [ 64::87 ] | shininess
[                    Comma] | [ 64::96 ] | ,
[               Identifier] | [ 64::98 ] | Vector3
[               Identifier] | [ 64::106] | lightColor
[         CloseParenthesis] | [ 64::116] | )
[         OpenCurlyBracket] | [ 65::4  ] | {
[               Identifier] | [ 66::8  ] | Vector3
[               Identifier] | [ 66::16 ] | reflectDir
[               Assignator] | [ 66::27 ] | =
[               Identifier] | [ 66::29 ] | reflect
[          OpenParenthesis] | [ 66::36 ] | (
[                 Operator] | [ 66::37 ] | -
[               Identifier] | [ 66::38 ] | lightDir
[                    Comma] | [ 66::46 ] | ,
[               Identifier] | [ 66::48 ] | normal
[         CloseParenthesis] | [ 66::54 ] | )
[            EndOfSentence] | [ 66::55 ] | ;
[               Identifier] | [ 67::8  ] | float
[               Identifier] | [ 67::14 ] | spec
[               Assignator] | [ 67::19 ] | =
[               Identifier] | [ 67::21 ] | pow
[          OpenParenthesis] | [ 67::24 ] | (
[               Identifier] | [ 67::25 ] | max
[          OpenParenthesis] | [ 67::28 ] | (
[               Identifier] | [ 67::29 ] | dot
[          OpenParenthesis] | [ 67::32 ] | (
[               Identifier] | [ 67::33 ] | viewDir
[                    Comma] | [ 67::40 ] | ,
[               Identifier] | [ 67::42 ] | reflectDir
[         CloseParenthesis] | [ 67::52 ] | )
[                    Comma] | [ 67::53 ] | ,
[                   Number] | [ 67::55 ] | 0.0
[         CloseParenthesis] | [ 67::58 ] | )
[                    Comma] | [ 67::59 ] | ,
[               Identifier] | [ 67::61 ] | shininess
[         CloseParenthesis] | [ 67::70 ] | )
[            EndOfSentence] | [ 67::71 ] | ;
[                   Return] | [ 68::8  ] | return
[               Identifier] | [ 68::15 ] | spec
[                 Operator] | [ 68::20 ] | *
[               Identifier] | [ 68::22 ] | lightColor
[            EndOfSentence] | [ 68::32 ] | ;
[        CloseCurlyBracket] | [ 69::4  ] | }
[        CloseCurlyBracket] | [ 70::0  ] | }
[                  Comment] | [ 72::0  ] | /*
Pipeline Description:
This pipeline is designed to render a 3D object by processing its vertex data and applying lighting calculations.

Vertex Shader (VertexPass):
- Transforms the input vertex positions using a model matrix to position the object correctly in the world space.
- Transforms the normals using the normal matrix for accurate lighting calculations.
- Passes UV coordinates, transformed positions, and normals to the fragment shader.

Fragment Shader (FragmentPass):
- Performs lighting calculations using ambient, diffuse, and specular components.
- Combines these lighting components with a texture sampled from the UV coordinates.
- Discards fragments where the texture's alpha value is zero.
- Sets the final pixel color based on the combined lighting and texture information.

The vertex and fragment shaders work together to accurately render the 3D object with realistic lighting and texturing.
*/
[                  Comment] | [ 90::0  ] | // Define the vertex shader stage
[             PipelineFlow] | [ 91::0  ] | VertexPass
[          OpenParenthesis] | [ 91::10 ] | (
[         CloseParenthesis] | [ 91::11 ] | )
[         OpenCurlyBracket] | [ 92::0  ] | {
[               Identifier] | [ 93::4  ] | Vector4
[               Identifier] | [ 93::12 ] | worldPosition
[               Assignator] | [ 93::26 ] | =
[               Identifier] | [ 93::28 ] | modelAttributes
[                 Accessor] | [ 93::43 ] | .
[               Identifier] | [ 93::44 ] | modelMatrix
[                 Operator] | [ 93::56 ] | *
[               Identifier] | [ 93::58 ] | Vector4
[          OpenParenthesis] | [ 93::65 ] | (
[               Identifier] | [ 93::66 ] | vertexPosition
[                    Comma] | [ 93::80 ] | ,
[                   Number] | [ 93::82 ] | 1.0
[         CloseParenthesis] | [ 93::85 ] | )
[            EndOfSentence] | [ 93::86 ] | ;
[               Identifier] | [ 94::4  ] | fragPosition
[               Assignator] | [ 94::17 ] | =
[               Identifier] | [ 94::19 ] | worldPosition
[                 Accessor] | [ 94::32 ] | .
[               Identifier] | [ 94::33 ] | xyz
[            EndOfSentence] | [ 94::36 ] | ;
[               Identifier] | [ 95::4  ] | fragNormal
[               Assignator] | [ 95::15 ] | =
[               Identifier] | [ 95::17 ] | mat3
[          OpenParenthesis] | [ 95::21 ] | (
[               Identifier] | [ 95::22 ] | modelAttributes
[                 Accessor] | [ 95::37 ] | .
[               Identifier] | [ 95::38 ] | normalMatrix
[         CloseParenthesis] | [ 95::50 ] | )
[                 Operator] | [ 95::52 ] | *
[               Identifier] | [ 95::54 ] | vertexNormal
[            EndOfSentence] | [ 95::66 ] | ;
[               Identifier] | [ 96::4  ] | fragUV
[               Assignator] | [ 96::11 ] | =
[               Identifier] | [ 96::13 ] | vertexUV
[            EndOfSentence] | [ 96::21 ] | ;
[               Identifier] | [ 98::4  ] | Vector4
[               Identifier] | [ 98::12 ] | clipSpacePosition
[               Assignator] | [ 98::30 ] | =
[               Identifier] | [ 98::32 ] | worldPosition
[            EndOfSentence] | [ 98::45 ] | ;
[               Identifier] | [ 99::4  ] | pixelPosition
[               Assignator] | [ 99::18 ] | =
[               Identifier] | [ 99::20 ] | clipSpacePosition
[            EndOfSentence] | [ 99::37 ] | ;
[        CloseCurlyBracket] | [100::0  ] | }
[                  Comment] | [102::0  ] | // Define the fragment shader stage
[             PipelineFlow] | [103::0  ] | FragmentPass
[          OpenParenthesis] | [103::12 ] | (
[         CloseParenthesis] | [103::13 ] | )
[         OpenCurlyBracket] | [104::0  ] | {
[                  Comment] | [105::4  ] | // Error handling example
[              IfStatement] | [106::4  ] | if
[          OpenParenthesis] | [106::7  ] | (
[               Identifier] | [106::8  ] | lightingConstants
[                 Accessor] | [106::25 ] | .
[               Identifier] | [106::26 ] | ambientIntensity
[                 Operator] | [106::43 ] | <
[                   Number] | [106::45 ] | 0.0
[                 Operator] | [106::49 ] | ||
[               Identifier] | [106::52 ] | lightingConstants
[                 Accessor] | [106::69 ] | .
[               Identifier] | [106::70 ] | ambientIntensity
[                 Operator] | [106::87 ] | >
[                   Number] | [106::89 ] | 1.0
[         CloseParenthesis] | [106::92 ] | )
[         OpenCurlyBracket] | [107::4  ] | {
[               Identifier] | [108::8  ] | raiseException
[          OpenParenthesis] | [108::22 ] | (
[           StringLitteral] | [108::23 ] | "Ambient intensity must be between 0 and 1. Current value: %d"
[                    Comma] | [108::85 ] | ,
[               Identifier] | [108::87 ] | lightingConstants
[                 Accessor] | [108::104] | .
[               Identifier] | [108::105] | ambientIntensity
[         CloseParenthesis] | [108::121] | )
[            EndOfSentence] | [108::122] | ;
[        CloseCurlyBracket] | [109::4  ] | }
[               Identifier] | [111::4  ] | Vector3
[               Identifier] | [111::12 ] | normal
[               Assignator] | [111::19 ] | =
[               Identifier] | [111::21 ] | normalize
[          OpenParenthesis] | [111::30 ] | (
[               Identifier] | [111::31 ] | fragNormal
[         CloseParenthesis] | [111::41 ] | )
[            EndOfSentence] | [111::42 ] | ;
[               Identifier] | [112::4  ] | Vector3
[               Identifier] | [112::12 ] | lightDir
[               Assignator] | [112::21 ] | =
[               Identifier] | [112::23 ] | normalize
[          OpenParenthesis] | [112::32 ] | (
[               Identifier] | [112::33 ] | lightingConstants
[                 Accessor] | [112::50 ] | .
[               Identifier] | [112::51 ] | lightPosition
[                 Operator] | [112::65 ] | -
[               Identifier] | [112::67 ] | fragPosition
[         CloseParenthesis] | [112::79 ] | )
[            EndOfSentence] | [112::80 ] | ;
[               Identifier] | [113::4  ] | Vector3
[               Identifier] | [113::12 ] | viewDir
[               Assignator] | [113::20 ] | =
[               Identifier] | [113::22 ] | normalize
[          OpenParenthesis] | [113::31 ] | (
[                 Operator] | [113::32 ] | -
[               Identifier] | [113::33 ] | fragPosition
[         CloseParenthesis] | [113::45 ] | )
[            EndOfSentence] | [113::46 ] | ;
[               Identifier] | [115::4  ] | Vector3
[               Identifier] | [115::12 ] | ambient
[               Assignator] | [115::20 ] | =
[               Identifier] | [115::22 ] | lightingConstants
[                 Accessor] | [115::39 ] | .
[               Identifier] | [115::40 ] | ambientIntensity
[                 Operator] | [115::57 ] | *
[               Identifier] | [115::59 ] | lightingConstants
[                 Accessor] | [115::76 ] | .
[               Identifier] | [115::77 ] | lightColor
[            EndOfSentence] | [115::87 ] | ;
[               Identifier] | [117::4  ] | Vector3
[               Identifier] | [117::12 ] | diffuse
[               Assignator] | [117::20 ] | =
[               Identifier] | [117::22 ] | Lighting
[       NamespaceSeparator] | [117::30 ] | ::
[               Identifier] | [117::32 ] | calculateDiffuse
[          OpenParenthesis] | [117::48 ] | (
[               Identifier] | [117::49 ] | normal
[                    Comma] | [117::55 ] | ,
[               Identifier] | [117::57 ] | lightDir
[                    Comma] | [117::65 ] | ,
[               Identifier] | [117::67 ] | lightingConstants
[                 Accessor] | [117::84 ] | .
[               Identifier] | [117::85 ] | lightColor
[         CloseParenthesis] | [117::95 ] | )
[            EndOfSentence] | [117::96 ] | ;
[               Identifier] | [119::4  ] | Material
[               Identifier] | [119::13 ] | material
[            EndOfSentence] | [119::21 ] | ;
[               Identifier] | [120::4  ] | Vector3
[               Identifier] | [120::12 ] | specular
[               Assignator] | [120::21 ] | =
[               Identifier] | [120::23 ] | Lighting
[       NamespaceSeparator] | [120::31 ] | ::
[               Identifier] | [120::33 ] | calculateSpecular
[          OpenParenthesis] | [120::50 ] | (
[               Identifier] | [120::51 ] | normal
[                    Comma] | [120::57 ] | ,
[               Identifier] | [120::59 ] | lightDir
[                    Comma] | [120::67 ] | ,
[               Identifier] | [120::69 ] | viewDir
[                    Comma] | [120::76 ] | ,
[               Identifier] | [120::78 ] | material
[                 Accessor] | [120::86 ] | .
[               Identifier] | [120::87 ] | shininess
[                    Comma] | [120::96 ] | ,
[               Identifier] | [120::98 ] | lightingConstants
[                 Accessor] | [120::115] | .
[               Identifier] | [120::116] | lightColor
[         CloseParenthesis] | [120::126] | )
[            EndOfSentence] | [120::127] | ;
[               Identifier] | [122::4  ] | Vector3
[               Identifier] | [122::12 ] | finalColor
[               Assignator] | [122::23 ] | =
[               Identifier] | [122::25 ] | ambient
[                 Operator] | [122::33 ] | +
[               Identifier] | [122::35 ] | diffuse
[                 Operator] | [122::43 ] | *
[               Identifier] | [122::45 ] | material
[                 Accessor] | [122::53 ] | .
[               Identifier] | [122::54 ] | diffuseColor
[                 Operator] | [122::67 ] | +
[               Identifier] | [122::69 ] | specular
[                 Operator] | [122::78 ] | *
[               Identifier] | [122::80 ] | material
[                 Accessor] | [122::88 ] | .
[               Identifier] | [122::89 ] | specularColor
[            EndOfSentence] | [122::102] | ;
[               Identifier] | [124::4  ] | Vector4
[               Identifier] | [124::12 ] | textureColor
[               Assignator] | [124::25 ] | =
[               Identifier] | [124::27 ] | getPixel
[          OpenParenthesis] | [124::35 ] | (
[               Identifier] | [124::36 ] | diffuseTexture
[                    Comma] | [124::50 ] | ,
[               Identifier] | [124::52 ] | fragUV
[         CloseParenthesis] | [124::58 ] | )
[            EndOfSentence] | [124::59 ] | ;
[               Identifier] | [125::4  ] | finalColor
[               Assignator] | [125::15 ] | *=
[               Identifier] | [125::18 ] | textureColor
[                 Accessor] | [125::30 ] | .
[               Identifier] | [125::31 ] | rgb
[            EndOfSentence] | [125::34 ] | ;
[              IfStatement] | [127::4  ] | if
[          OpenParenthesis] | [127::7  ] | (
[               Identifier] | [127::8  ] | textureColor
[                 Accessor] | [127::20 ] | .
[               Identifier] | [127::21 ] | a
[                 Operator] | [127::23 ] | ==
[                   Number] | [127::26 ] | 0
[         CloseParenthesis] | [127::27 ] | )
[         OpenCurlyBracket] | [128::4  ] | {
[                  Discard] | [129::8  ] | discard
[            EndOfSentence] | [129::15 ] | ;
[        CloseCurlyBracket] | [130::4  ] | }
[               Identifier] | [132::4  ] | pixelColor
[               Assignator] | [132::15 ] | =
[               Identifier] | [132::17 ] | Vector4
[          OpenParenthesis] | [132::24 ] | (
[               Identifier] | [132::25 ] | finalColor
[                    Comma] | [132::35 ] | ,
[               Identifier] | [132::37 ] | textureColor
[                 Accessor] | [132::49 ] | .
[               Identifier] | [132::50 ] | a
[         CloseParenthesis] | [132::51 ] | )
[            EndOfSentence] | [132::52 ] | ;
[        CloseCurlyBracket] | [133::0  ] | }
