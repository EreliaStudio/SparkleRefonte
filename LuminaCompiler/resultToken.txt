[                  Comment] | [  1::0  ] | // Include predefined and user-provided files
[                 #include] | [  2::0  ] | #include
[          IncludeLitteral] | [  2::9  ] | <importA>
[                  Comment] | [  4::0  ] | // Define the pipeline flow
[             PipelineFlow] | [  5::0  ] | Input
[    PipelineFlowSeparator] | [  5::6  ] | ->
[             PipelineFlow] | [  5::9  ] | VertexPass
[                Separator] | [  5::19 ] | :
[               Identifier] | [  5::21 ] | Vector3
[               Identifier] | [  5::29 ] | vertexPosition
[            EndOfSentence] | [  5::43 ] | ;
[             PipelineFlow] | [  6::0  ] | Input
[    PipelineFlowSeparator] | [  6::6  ] | ->
[             PipelineFlow] | [  6::9  ] | VertexPass
[                Separator] | [  6::19 ] | :
[               Identifier] | [  6::21 ] | Vector3
[               Identifier] | [  6::29 ] | vertexNormal
[            EndOfSentence] | [  6::41 ] | ;
[             PipelineFlow] | [  7::0  ] | Input
[    PipelineFlowSeparator] | [  7::6  ] | ->
[             PipelineFlow] | [  7::9  ] | VertexPass
[                Separator] | [  7::19 ] | :
[               Identifier] | [  7::21 ] | Vector2
[               Identifier] | [  7::29 ] | vertexUV
[            EndOfSentence] | [  7::37 ] | ;
[             PipelineFlow] | [  8::0  ] | VertexPass
[    PipelineFlowSeparator] | [  8::11 ] | ->
[             PipelineFlow] | [  8::14 ] | FragmentPass
[                Separator] | [  8::26 ] | :
[               Identifier] | [  8::28 ] | Vector3
[               Identifier] | [  8::36 ] | fragPosition
[            EndOfSentence] | [  8::48 ] | ;
[             PipelineFlow] | [  9::0  ] | VertexPass
[    PipelineFlowSeparator] | [  9::11 ] | ->
[             PipelineFlow] | [  9::14 ] | FragmentPass
[                Separator] | [  9::26 ] | :
[               Identifier] | [  9::28 ] | Vector3
[               Identifier] | [  9::36 ] | fragNormal
[            EndOfSentence] | [  9::46 ] | ;
[             PipelineFlow] | [ 10::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 10::11 ] | ->
[             PipelineFlow] | [ 10::14 ] | FragmentPass
[                Separator] | [ 10::26 ] | :
[               Identifier] | [ 10::28 ] | Vector2
[               Identifier] | [ 10::36 ] | fragUV
[            EndOfSentence] | [ 10::42 ] | ;
[                  Comment] | [ 12::0  ] | // Define custom structures
[           StructureBlock] | [ 13::0  ] | struct
[               Identifier] | [ 13::7  ] | Material
[         OpenCurlyBracket] | [ 14::0  ] | {
[               Identifier] | [ 15::4  ] | Vector3
[               Identifier] | [ 15::12 ] | diffuseColor
[            EndOfSentence] | [ 15::24 ] | ;
[               Identifier] | [ 16::4  ] | Vector3
[               Identifier] | [ 16::12 ] | specularColor
[            EndOfSentence] | [ 16::25 ] | ;
[               Identifier] | [ 17::4  ] | float
[               Identifier] | [ 17::10 ] | shininess
[            EndOfSentence] | [ 17::19 ] | ;
[        CloseCurlyBracket] | [ 18::0  ] | }
[            EndOfSentence] | [ 18::1  ] | ;
[                  Comment] | [ 20::0  ] | // Define a texture
[                  Texture] | [ 21::0  ] | Texture
[               Identifier] | [ 21::8  ] | diffuseTexture
[            EndOfSentence] | [ 21::22 ] | ;
[                  Comment] | [ 23::0  ] | // Define attribute blocks
[           AttributeBlock] | [ 24::0  ] | AttributeBlock
[               Identifier] | [ 24::15 ] | modelAttributes
[         OpenCurlyBracket] | [ 25::0  ] | {
[               Identifier] | [ 26::4  ] | Matrix4x4
[               Identifier] | [ 26::14 ] | modelMatrix
[            EndOfSentence] | [ 26::25 ] | ;
[               Identifier] | [ 27::4  ] | Matrix4x4
[               Identifier] | [ 27::14 ] | normalMatrix
[            EndOfSentence] | [ 27::26 ] | ;
[        CloseCurlyBracket] | [ 28::0  ] | }
[            EndOfSentence] | [ 28::1  ] | ;
[                  Comment] | [ 30::0  ] | // Define constant blocks
[            ConstantBlock] | [ 31::0  ] | ConstantBlock
[               Identifier] | [ 31::14 ] | lightingConstants
[         OpenCurlyBracket] | [ 32::0  ] | {
[               Identifier] | [ 33::4  ] | Vector3
[               Identifier] | [ 33::12 ] | lightPosition
[            EndOfSentence] | [ 33::25 ] | ;
[               Identifier] | [ 34::4  ] | Vector3
[               Identifier] | [ 34::12 ] | lightColor
[            EndOfSentence] | [ 34::22 ] | ;
[               Identifier] | [ 35::4  ] | float
[               Identifier] | [ 35::10 ] | ambientIntensity
[            EndOfSentence] | [ 35::26 ] | ;
[        CloseCurlyBracket] | [ 36::0  ] | }
[            EndOfSentence] | [ 36::1  ] | ;
[                  Comment] | [ 38::0  ] | // Create namespaces
[                Namespace] | [ 39::0  ] | namespace
[               Identifier] | [ 39::10 ] | Lighting
[         OpenCurlyBracket] | [ 40::0  ] | {
[           StructureBlock] | [ 41::4  ] | struct
[               Identifier] | [ 41::11 ] | Material
[         OpenCurlyBracket] | [ 42::4  ] | {
[               Identifier] | [ 43::8  ] | Vector3Int
[               Identifier] | [ 43::19 ] | diffuseColor
[            EndOfSentence] | [ 43::31 ] | ;
[               Identifier] | [ 44::8  ] | Vector3
[               Identifier] | [ 44::16 ] | specularColor
[            EndOfSentence] | [ 44::29 ] | ;
[               Identifier] | [ 45::8  ] | float
[               Identifier] | [ 45::14 ] | shininess
[            EndOfSentence] | [ 45::23 ] | ;
[        CloseCurlyBracket] | [ 46::4  ] | }
[            EndOfSentence] | [ 46::5  ] | ;
[           StructureBlock] | [ 48::4  ] | struct
[               Identifier] | [ 48::11 ] | Test
[         OpenCurlyBracket] | [ 49::4  ] | {
[               Identifier] | [ 50::8  ] | Material
[               Identifier] | [ 50::17 ] | materialA
[            EndOfSentence] | [ 50::26 ] | ;
[       NamespaceSeparator] | [ 51::8  ] | ::
[               Identifier] | [ 51::10 ] | Material
[               Identifier] | [ 51::19 ] | materialB
[            EndOfSentence] | [ 51::28 ] | ;
[               Identifier] | [ 52::8  ] | Lighting
[       NamespaceSeparator] | [ 52::16 ] | ::
[               Identifier] | [ 52::18 ] | Material
[               Identifier] | [ 52::27 ] | materialC
[            EndOfSentence] | [ 52::36 ] | ;
[       NamespaceSeparator] | [ 53::8  ] | ::
[               Identifier] | [ 53::10 ] | Lighting
[       NamespaceSeparator] | [ 53::18 ] | ::
[               Identifier] | [ 53::20 ] | Material
[               Identifier] | [ 53::29 ] | materialD
[            EndOfSentence] | [ 53::38 ] | ;
[        CloseCurlyBracket] | [ 54::4  ] | }
[            EndOfSentence] | [ 54::5  ] | ;
[               Identifier] | [ 56::4  ] | Vector3
[               Identifier] | [ 56::12 ] | calculateDiffuse
[          OpenParenthesis] | [ 56::28 ] | (
[               Identifier] | [ 56::29 ] | Vector3
[               Identifier] | [ 56::37 ] | normal
[                    Comma] | [ 56::43 ] | ,
[               Identifier] | [ 56::45 ] | Vector3
[               Identifier] | [ 56::53 ] | lightDir
[                    Comma] | [ 56::61 ] | ,
[               Identifier] | [ 56::63 ] | Vector3
[               Identifier] | [ 56::71 ] | lightColor
[         CloseParenthesis] | [ 56::81 ] | )
[         OpenCurlyBracket] | [ 57::4  ] | {
[               Identifier] | [ 58::8  ] | float
[               Identifier] | [ 58::14 ] | diff
[               Assignator] | [ 58::19 ] | =
[               Identifier] | [ 58::21 ] | max
[          OpenParenthesis] | [ 58::24 ] | (
[               Identifier] | [ 58::25 ] | dot
[          OpenParenthesis] | [ 58::28 ] | (
[               Identifier] | [ 58::29 ] | normal
[                    Comma] | [ 58::35 ] | ,
[               Identifier] | [ 58::37 ] | lightDir
[         CloseParenthesis] | [ 58::45 ] | )
[                    Comma] | [ 58::46 ] | ,
[                   Number] | [ 58::48 ] | 0.0
[         CloseParenthesis] | [ 58::51 ] | )
[            EndOfSentence] | [ 58::52 ] | ;
[                   Return] | [ 59::8  ] | return
[               Identifier] | [ 59::15 ] | diff
[                 Operator] | [ 59::20 ] | *
[               Identifier] | [ 59::22 ] | lightColor
[            EndOfSentence] | [ 59::32 ] | ;
[        CloseCurlyBracket] | [ 60::4  ] | }
[               Identifier] | [ 62::4  ] | Vector3
[               Identifier] | [ 62::12 ] | calculateSpecular
[          OpenParenthesis] | [ 62::29 ] | (
[               Identifier] | [ 62::30 ] | Vector3
[               Identifier] | [ 62::38 ] | normal
[                    Comma] | [ 62::44 ] | ,
[               Identifier] | [ 62::46 ] | Vector3
[               Identifier] | [ 62::54 ] | lightDir
[                    Comma] | [ 62::62 ] | ,
[               Identifier] | [ 62::64 ] | Vector3
[               Identifier] | [ 62::72 ] | viewDir
[                    Comma] | [ 62::79 ] | ,
[               Identifier] | [ 62::81 ] | float
[               Identifier] | [ 62::87 ] | shininess
[                    Comma] | [ 62::96 ] | ,
[               Identifier] | [ 62::98 ] | Vector3
[               Identifier] | [ 62::106] | lightColor
[         CloseParenthesis] | [ 62::116] | )
[         OpenCurlyBracket] | [ 63::4  ] | {
[               Identifier] | [ 64::8  ] | Vector3
[               Identifier] | [ 64::16 ] | reflectDir
[               Assignator] | [ 64::27 ] | =
[               Identifier] | [ 64::29 ] | reflect
[          OpenParenthesis] | [ 64::36 ] | (
[                 Operator] | [ 64::37 ] | -
[               Identifier] | [ 64::38 ] | lightDir
[                    Comma] | [ 64::46 ] | ,
[               Identifier] | [ 64::48 ] | normal
[         CloseParenthesis] | [ 64::54 ] | )
[            EndOfSentence] | [ 64::55 ] | ;
[               Identifier] | [ 65::8  ] | float
[               Identifier] | [ 65::14 ] | spec
[               Assignator] | [ 65::19 ] | =
[               Identifier] | [ 65::21 ] | pow
[          OpenParenthesis] | [ 65::24 ] | (
[               Identifier] | [ 65::25 ] | max
[          OpenParenthesis] | [ 65::28 ] | (
[               Identifier] | [ 65::29 ] | dot
[          OpenParenthesis] | [ 65::32 ] | (
[               Identifier] | [ 65::33 ] | viewDir
[                    Comma] | [ 65::40 ] | ,
[               Identifier] | [ 65::42 ] | reflectDir
[         CloseParenthesis] | [ 65::52 ] | )
[                    Comma] | [ 65::53 ] | ,
[                   Number] | [ 65::55 ] | 0.0
[         CloseParenthesis] | [ 65::58 ] | )
[                    Comma] | [ 65::59 ] | ,
[               Identifier] | [ 65::61 ] | shininess
[         CloseParenthesis] | [ 65::70 ] | )
[            EndOfSentence] | [ 65::71 ] | ;
[                   Return] | [ 66::8  ] | return
[               Identifier] | [ 66::15 ] | spec
[                 Operator] | [ 66::20 ] | *
[               Identifier] | [ 66::22 ] | lightColor
[            EndOfSentence] | [ 66::32 ] | ;
[        CloseCurlyBracket] | [ 67::4  ] | }
[        CloseCurlyBracket] | [ 68::0  ] | }
[               Identifier] | [ 70::0  ] | Vector3
[               Identifier] | [ 70::8  ] | calculateDiffuseA
[          OpenParenthesis] | [ 70::25 ] | (
[               Identifier] | [ 70::26 ] | Vector3
[               Identifier] | [ 70::34 ] | normal
[                    Comma] | [ 70::40 ] | ,
[               Identifier] | [ 70::42 ] | Vector3
[               Identifier] | [ 70::50 ] | lightDir
[                    Comma] | [ 70::58 ] | ,
[               Identifier] | [ 70::60 ] | Vector3
[               Identifier] | [ 70::68 ] | lightColor
[         CloseParenthesis] | [ 70::78 ] | )
[         OpenCurlyBracket] | [ 71::0  ] | {
[                   Return] | [ 72::4  ] | return
[               Identifier] | [ 72::11 ] | Lighting
[       NamespaceSeparator] | [ 72::19 ] | ::
[               Identifier] | [ 72::21 ] | calculateDiffuse
[          OpenParenthesis] | [ 72::37 ] | (
[               Identifier] | [ 72::38 ] | normal
[                    Comma] | [ 72::44 ] | ,
[               Identifier] | [ 72::46 ] | lightDir
[                    Comma] | [ 72::54 ] | ,
[               Identifier] | [ 72::56 ] | lightColor
[         CloseParenthesis] | [ 72::66 ] | )
[            EndOfSentence] | [ 72::67 ] | ;
[        CloseCurlyBracket] | [ 73::0  ] | }
[                  Comment] | [ 75::0  ] | /*
Pipeline Description:
This pipeline is designed to render a 3D object by processing its vertex data and applying lighting calculations.

Vertex Shader (VertexPass):
- Transforms the input vertex positions using a model matrix to position the object correctly in the world space.
- Transforms the normals using the normal matrix for accurate lighting calculations.
- Passes UV coordinates, transformed positions, and normals to the fragment shader.

Fragment Shader (FragmentPass):
- Performs lighting calculations using ambient, diffuse, and specular components.
- Combines these lighting components with a texture sampled from the UV coordinates.
- Discards fragments where the texture's alpha value is zero.
- Sets the final pixel color based on the combined lighting and texture information.

The vertex and fragment shaders work together to accurately render the 3D object with realistic lighting and texturing.
*/
[                  Comment] | [ 93::0  ] | // Define the vertex shader stage
[             PipelineFlow] | [ 94::0  ] | VertexPass
[          OpenParenthesis] | [ 94::10 ] | (
[         CloseParenthesis] | [ 94::11 ] | )
[         OpenCurlyBracket] | [ 95::0  ] | {
[               Identifier] | [ 96::4  ] | Vector4
[               Identifier] | [ 96::12 ] | worldPosition
[               Assignator] | [ 96::26 ] | =
[               Identifier] | [ 96::28 ] | modelAttributes
[                 Accessor] | [ 96::43 ] | .
[               Identifier] | [ 96::44 ] | modelMatrix
[                 Operator] | [ 96::56 ] | *
[               Identifier] | [ 96::58 ] | Vector4
[          OpenParenthesis] | [ 96::65 ] | (
[               Identifier] | [ 96::66 ] | vertexPosition
[                    Comma] | [ 96::80 ] | ,
[                   Number] | [ 96::82 ] | 1.0
[         CloseParenthesis] | [ 96::85 ] | )
[            EndOfSentence] | [ 96::86 ] | ;
[               Identifier] | [ 97::4  ] | fragPosition
[               Assignator] | [ 97::17 ] | =
[               Identifier] | [ 97::19 ] | worldPosition
[                 Accessor] | [ 97::32 ] | .
[               Identifier] | [ 97::33 ] | xyz
[            EndOfSentence] | [ 97::36 ] | ;
[               Identifier] | [ 98::4  ] | fragNormal
[               Assignator] | [ 98::15 ] | =
[               Identifier] | [ 98::17 ] | mat3
[          OpenParenthesis] | [ 98::21 ] | (
[               Identifier] | [ 98::22 ] | modelAttributes
[                 Accessor] | [ 98::37 ] | .
[               Identifier] | [ 98::38 ] | normalMatrix
[         CloseParenthesis] | [ 98::50 ] | )
[                 Operator] | [ 98::52 ] | *
[               Identifier] | [ 98::54 ] | vertexNormal
[            EndOfSentence] | [ 98::66 ] | ;
[               Identifier] | [ 99::4  ] | fragUV
[               Assignator] | [ 99::11 ] | =
[               Identifier] | [ 99::13 ] | vertexUV
[            EndOfSentence] | [ 99::21 ] | ;
[               Identifier] | [101::4  ] | Vector4
[               Identifier] | [101::12 ] | clipSpacePosition
[               Assignator] | [101::30 ] | =
[               Identifier] | [101::32 ] | worldPosition
[            EndOfSentence] | [101::45 ] | ;
[               Identifier] | [102::4  ] | pixelPosition
[               Assignator] | [102::18 ] | =
[               Identifier] | [102::20 ] | clipSpacePosition
[            EndOfSentence] | [102::37 ] | ;
[        CloseCurlyBracket] | [103::0  ] | }
[                  Comment] | [105::0  ] | // Define the fragment shader stage
[             PipelineFlow] | [106::0  ] | FragmentPass
[          OpenParenthesis] | [106::12 ] | (
[         CloseParenthesis] | [106::13 ] | )
[         OpenCurlyBracket] | [107::0  ] | {
[                  Comment] | [108::4  ] | // Error handling example
[              IfStatement] | [109::4  ] | if
[          OpenParenthesis] | [109::7  ] | (
[               Identifier] | [109::8  ] | lightingConstants
[                 Accessor] | [109::25 ] | .
[               Identifier] | [109::26 ] | ambientIntensity
[                 Operator] | [109::43 ] | <
[                   Number] | [109::45 ] | 0.0
[                 Operator] | [109::49 ] | ||
[               Identifier] | [109::52 ] | lightingConstants
[                 Accessor] | [109::69 ] | .
[               Identifier] | [109::70 ] | ambientIntensity
[                 Operator] | [109::87 ] | >
[                   Number] | [109::89 ] | 1.0
[         CloseParenthesis] | [109::92 ] | )
[         OpenCurlyBracket] | [110::4  ] | {
[               Identifier] | [111::8  ] | raiseException
[          OpenParenthesis] | [111::22 ] | (
[           StringLitteral] | [111::23 ] | "Ambient intensity must be between 0 and 1. Current value: %d"
[                    Comma] | [111::85 ] | ,
[               Identifier] | [111::87 ] | lightingConstants
[                 Accessor] | [111::104] | .
[               Identifier] | [111::105] | ambientIntensity
[         CloseParenthesis] | [111::121] | )
[            EndOfSentence] | [111::122] | ;
[        CloseCurlyBracket] | [112::4  ] | }
[               Identifier] | [114::4  ] | Vector3
[               Identifier] | [114::12 ] | normal
[               Assignator] | [114::19 ] | =
[               Identifier] | [114::21 ] | normalize
[          OpenParenthesis] | [114::30 ] | (
[               Identifier] | [114::31 ] | fragNormal
[         CloseParenthesis] | [114::41 ] | )
[            EndOfSentence] | [114::42 ] | ;
[               Identifier] | [115::4  ] | Vector3
[               Identifier] | [115::12 ] | lightDir
[               Assignator] | [115::21 ] | =
[               Identifier] | [115::23 ] | normalize
[          OpenParenthesis] | [115::32 ] | (
[               Identifier] | [115::33 ] | lightingConstants
[                 Accessor] | [115::50 ] | .
[               Identifier] | [115::51 ] | lightPosition
[                 Operator] | [115::65 ] | -
[               Identifier] | [115::67 ] | fragPosition
[         CloseParenthesis] | [115::79 ] | )
[            EndOfSentence] | [115::80 ] | ;
[               Identifier] | [116::4  ] | Vector3
[               Identifier] | [116::12 ] | viewDir
[               Assignator] | [116::20 ] | =
[               Identifier] | [116::22 ] | normalize
[          OpenParenthesis] | [116::31 ] | (
[                 Operator] | [116::32 ] | -
[               Identifier] | [116::33 ] | fragPosition
[         CloseParenthesis] | [116::45 ] | )
[            EndOfSentence] | [116::46 ] | ;
[               Identifier] | [118::4  ] | Vector3
[               Identifier] | [118::12 ] | ambient
[               Assignator] | [118::20 ] | =
[               Identifier] | [118::22 ] | lightingConstants
[                 Accessor] | [118::39 ] | .
[               Identifier] | [118::40 ] | ambientIntensity
[                 Operator] | [118::57 ] | *
[               Identifier] | [118::59 ] | lightingConstants
[                 Accessor] | [118::76 ] | .
[               Identifier] | [118::77 ] | lightColor
[            EndOfSentence] | [118::87 ] | ;
[               Identifier] | [120::4  ] | Vector3
[               Identifier] | [120::12 ] | diffuse
[               Assignator] | [120::20 ] | =
[               Identifier] | [120::22 ] | Lighting
[       NamespaceSeparator] | [120::30 ] | ::
[               Identifier] | [120::32 ] | calculateDiffuse
[          OpenParenthesis] | [120::48 ] | (
[               Identifier] | [120::49 ] | normal
[                    Comma] | [120::55 ] | ,
[               Identifier] | [120::57 ] | lightDir
[                    Comma] | [120::65 ] | ,
[               Identifier] | [120::67 ] | lightingConstants
[                 Accessor] | [120::84 ] | .
[               Identifier] | [120::85 ] | lightColor
[         CloseParenthesis] | [120::95 ] | )
[            EndOfSentence] | [120::96 ] | ;
[       NamespaceSeparator] | [122::4  ] | ::
[               Identifier] | [122::6  ] | Material
[               Identifier] | [122::15 ] | material
[            EndOfSentence] | [122::23 ] | ;
[               Identifier] | [123::4  ] | Vector3
[               Identifier] | [123::12 ] | specular
[               Assignator] | [123::21 ] | =
[       NamespaceSeparator] | [123::23 ] | ::
[               Identifier] | [123::25 ] | Lighting
[       NamespaceSeparator] | [123::33 ] | ::
[               Identifier] | [123::35 ] | calculateSpecular
[          OpenParenthesis] | [123::52 ] | (
[               Identifier] | [123::53 ] | normal
[                    Comma] | [123::59 ] | ,
[               Identifier] | [123::61 ] | lightDir
[                    Comma] | [123::69 ] | ,
[               Identifier] | [123::71 ] | viewDir
[                    Comma] | [123::78 ] | ,
[               Identifier] | [123::80 ] | material
[                 Accessor] | [123::88 ] | .
[               Identifier] | [123::89 ] | shininess
[                    Comma] | [123::98 ] | ,
[               Identifier] | [123::100] | lightingConstants
[                 Accessor] | [123::117] | .
[               Identifier] | [123::118] | lightColor
[         CloseParenthesis] | [123::128] | )
[            EndOfSentence] | [123::129] | ;
[               Identifier] | [125::4  ] | Vector3
[               Identifier] | [125::12 ] | finalColor
[               Assignator] | [125::23 ] | =
[               Identifier] | [125::25 ] | ambient
[                 Operator] | [125::33 ] | +
[               Identifier] | [125::35 ] | diffuse
[                 Operator] | [125::43 ] | *
[               Identifier] | [125::45 ] | material
[                 Accessor] | [125::53 ] | .
[               Identifier] | [125::54 ] | diffuseColor
[                 Operator] | [125::67 ] | +
[               Identifier] | [125::69 ] | specular
[                 Operator] | [125::78 ] | *
[               Identifier] | [125::80 ] | material
[                 Accessor] | [125::88 ] | .
[               Identifier] | [125::89 ] | specularColor
[            EndOfSentence] | [125::102] | ;
[               Identifier] | [127::4  ] | Vector4
[               Identifier] | [127::12 ] | textureColor
[               Assignator] | [127::25 ] | =
[               Identifier] | [127::27 ] | getPixel
[          OpenParenthesis] | [127::35 ] | (
[               Identifier] | [127::36 ] | diffuseTexture
[                    Comma] | [127::50 ] | ,
[               Identifier] | [127::52 ] | fragUV
[         CloseParenthesis] | [127::58 ] | )
[            EndOfSentence] | [127::59 ] | ;
[               Identifier] | [128::4  ] | finalColor
[               Assignator] | [128::15 ] | *=
[               Identifier] | [128::18 ] | textureColor
[                 Accessor] | [128::30 ] | .
[               Identifier] | [128::31 ] | rgb
[            EndOfSentence] | [128::34 ] | ;
[              IfStatement] | [130::4  ] | if
[          OpenParenthesis] | [130::7  ] | (
[               Identifier] | [130::8  ] | textureColor
[                 Accessor] | [130::20 ] | .
[               Identifier] | [130::21 ] | a
[                 Operator] | [130::23 ] | ==
[                   Number] | [130::26 ] | 0
[         CloseParenthesis] | [130::27 ] | )
[         OpenCurlyBracket] | [131::4  ] | {
[                  Discard] | [132::8  ] | discard
[            EndOfSentence] | [132::15 ] | ;
[        CloseCurlyBracket] | [133::4  ] | }
[               Identifier] | [135::4  ] | pixelColor
[               Assignator] | [135::15 ] | =
[               Identifier] | [135::17 ] | Vector4
[          OpenParenthesis] | [135::24 ] | (
[               Identifier] | [135::25 ] | finalColor
[                    Comma] | [135::35 ] | ,
[               Identifier] | [135::37 ] | textureColor
[                 Accessor] | [135::49 ] | .
[               Identifier] | [135::50 ] | a
[         CloseParenthesis] | [135::51 ] | )
[            EndOfSentence] | [135::52 ] | ;
[        CloseCurlyBracket] | [136::0  ] | }
