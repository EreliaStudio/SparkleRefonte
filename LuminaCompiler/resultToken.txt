[                  Comment] | [  1::0  ] | // Include predefined and user-provided files
[                 #include] | [  2::0  ] | #include
[          IncludeLitteral] | [  2::9  ] | <screenConstants>
[                 #include] | [  3::0  ] | #include
[           StringLitteral] | [  3::9  ] | "shader/customInclude.lum"
[                  Comment] | [  5::0  ] | // Define the pipeline flow
[             PipelineFlow] | [  6::0  ] | Input
[    PipelineFlowSeparator] | [  6::6  ] | ->
[             PipelineFlow] | [  6::9  ] | VertexPass
[                Separator] | [  6::19 ] | :
[               Identifier] | [  6::21 ] | Vector3
[               Identifier] | [  6::29 ] | vertexPosition
[            EndOfSentence] | [  6::43 ] | ;
[             PipelineFlow] | [  7::0  ] | Input
[    PipelineFlowSeparator] | [  7::6  ] | ->
[             PipelineFlow] | [  7::9  ] | VertexPass
[                Separator] | [  7::19 ] | :
[               Identifier] | [  7::21 ] | Vector3
[               Identifier] | [  7::29 ] | vertexNormal
[            EndOfSentence] | [  7::41 ] | ;
[             PipelineFlow] | [  8::0  ] | Input
[    PipelineFlowSeparator] | [  8::6  ] | ->
[             PipelineFlow] | [  8::9  ] | VertexPass
[                Separator] | [  8::19 ] | :
[               Identifier] | [  8::21 ] | vec2
[               Identifier] | [  8::26 ] | vertexUV
[            EndOfSentence] | [  8::34 ] | ;
[             PipelineFlow] | [  9::0  ] | VertexPass
[    PipelineFlowSeparator] | [  9::11 ] | ->
[             PipelineFlow] | [  9::14 ] | FragmentPass
[                Separator] | [  9::26 ] | :
[               Identifier] | [  9::28 ] | Vector3
[               Identifier] | [  9::36 ] | fragPosition
[            EndOfSentence] | [  9::48 ] | ;
[             PipelineFlow] | [ 10::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 10::11 ] | ->
[             PipelineFlow] | [ 10::14 ] | FragmentPass
[                Separator] | [ 10::26 ] | :
[               Identifier] | [ 10::28 ] | Vector3
[               Identifier] | [ 10::36 ] | fragNormal
[            EndOfSentence] | [ 10::46 ] | ;
[             PipelineFlow] | [ 11::0  ] | VertexPass
[    PipelineFlowSeparator] | [ 11::11 ] | ->
[             PipelineFlow] | [ 11::14 ] | FragmentPass
[                Separator] | [ 11::26 ] | :
[               Identifier] | [ 11::28 ] | vec2
[               Identifier] | [ 11::33 ] | fragUV
[            EndOfSentence] | [ 11::39 ] | ;
[                  Comment] | [ 13::0  ] | // Define custom structures
[           StructureBlock] | [ 14::0  ] | struct
[               Identifier] | [ 14::7  ] | Material
[         OpenCurlyBracket] | [ 15::0  ] | {
[               Identifier] | [ 16::4  ] | Vector3
[               Identifier] | [ 16::12 ] | diffuseColor
[            EndOfSentence] | [ 16::24 ] | ;
[               Identifier] | [ 17::4  ] | Vector3
[               Identifier] | [ 17::12 ] | specularColor
[            EndOfSentence] | [ 17::25 ] | ;
[               Identifier] | [ 18::4  ] | float
[               Identifier] | [ 18::10 ] | shininess
[            EndOfSentence] | [ 18::19 ] | ;
[        CloseCurlyBracket] | [ 19::0  ] | }
[            EndOfSentence] | [ 19::1  ] | ;
[                  Comment] | [ 21::0  ] | // Define a texture
[                  Texture] | [ 22::0  ] | Texture
[               Identifier] | [ 22::8  ] | diffuseTexture
[            EndOfSentence] | [ 22::22 ] | ;
[                  Comment] | [ 24::0  ] | // Define attribute blocks
[           AttributeBlock] | [ 25::0  ] | AttributeBlock
[               Identifier] | [ 25::15 ] | modelAttributes
[         OpenCurlyBracket] | [ 26::0  ] | {
[               Identifier] | [ 27::4  ] | Matrix4x4
[               Identifier] | [ 27::14 ] | modelMatrix
[            EndOfSentence] | [ 27::25 ] | ;
[               Identifier] | [ 28::4  ] | Matrix4x4
[               Identifier] | [ 28::14 ] | normalMatrix
[            EndOfSentence] | [ 28::26 ] | ;
[        CloseCurlyBracket] | [ 29::0  ] | }
[            EndOfSentence] | [ 29::1  ] | ;
[                  Comment] | [ 31::0  ] | // Define constant blocks
[            ConstantBlock] | [ 32::0  ] | ConstantBlock
[               Identifier] | [ 32::14 ] | lightingConstants
[         OpenCurlyBracket] | [ 33::0  ] | {
[               Identifier] | [ 34::4  ] | Vector3
[               Identifier] | [ 34::12 ] | lightPosition
[            EndOfSentence] | [ 34::25 ] | ;
[               Identifier] | [ 35::4  ] | Vector3
[               Identifier] | [ 35::12 ] | lightColor
[            EndOfSentence] | [ 35::22 ] | ;
[               Identifier] | [ 36::4  ] | float
[               Identifier] | [ 36::10 ] | ambientIntensity
[            EndOfSentence] | [ 36::26 ] | ;
[        CloseCurlyBracket] | [ 37::0  ] | }
[            EndOfSentence] | [ 37::1  ] | ;
[                  Comment] | [ 39::0  ] | // Create namespaces
[                Namespace] | [ 40::0  ] | namespace
[               Identifier] | [ 40::10 ] | Lighting
[         OpenCurlyBracket] | [ 41::0  ] | {
[           StructureBlock] | [ 42::1  ] | struct
[               Identifier] | [ 42::8  ] | Test
[         OpenCurlyBracket] | [ 43::1  ] | {
[               Identifier] | [ 44::2  ] | int
[               Identifier] | [ 44::6  ] | value
[            EndOfSentence] | [ 44::11 ] | ;
[        CloseCurlyBracket] | [ 45::1  ] | }
[            EndOfSentence] | [ 45::2  ] | ;
[               Identifier] | [ 47::4  ] | Vector3
[               Identifier] | [ 47::12 ] | calculateDiffuse
[          OpenParenthesis] | [ 47::28 ] | (
[               Identifier] | [ 47::29 ] | Vector3
[               Identifier] | [ 47::37 ] | normal
[                    Comma] | [ 47::43 ] | ,
[               Identifier] | [ 47::45 ] | Vector3
[               Identifier] | [ 47::53 ] | lightDir
[                    Comma] | [ 47::61 ] | ,
[               Identifier] | [ 47::63 ] | Vector3
[               Identifier] | [ 47::71 ] | lightColor
[         CloseParenthesis] | [ 47::81 ] | )
[         OpenCurlyBracket] | [ 48::4  ] | {
[               Identifier] | [ 49::8  ] | float
[               Identifier] | [ 49::14 ] | diff
[               Assignator] | [ 49::19 ] | =
[               Identifier] | [ 49::21 ] | max
[          OpenParenthesis] | [ 49::24 ] | (
[               Identifier] | [ 49::25 ] | dot
[          OpenParenthesis] | [ 49::28 ] | (
[               Identifier] | [ 49::29 ] | normal
[                    Comma] | [ 49::35 ] | ,
[               Identifier] | [ 49::37 ] | lightDir
[         CloseParenthesis] | [ 49::45 ] | )
[                    Comma] | [ 49::46 ] | ,
[                   Number] | [ 49::48 ] | 0.0
[         CloseParenthesis] | [ 49::51 ] | )
[            EndOfSentence] | [ 49::52 ] | ;
[                   Return] | [ 50::8  ] | return
[               Identifier] | [ 50::15 ] | diff
[                 Operator] | [ 50::20 ] | *
[               Identifier] | [ 50::22 ] | lightColor
[            EndOfSentence] | [ 50::32 ] | ;
[        CloseCurlyBracket] | [ 51::4  ] | }
[               Identifier] | [ 53::4  ] | Vector3
[               Identifier] | [ 53::12 ] | calculateSpecular
[          OpenParenthesis] | [ 53::29 ] | (
[               Identifier] | [ 53::30 ] | Vector3
[               Identifier] | [ 53::38 ] | normal
[                    Comma] | [ 53::44 ] | ,
[               Identifier] | [ 53::46 ] | Vector3
[               Identifier] | [ 53::54 ] | lightDir
[                    Comma] | [ 53::62 ] | ,
[               Identifier] | [ 53::64 ] | Vector3
[               Identifier] | [ 53::72 ] | viewDir
[                    Comma] | [ 53::79 ] | ,
[               Identifier] | [ 53::81 ] | float
[               Identifier] | [ 53::87 ] | shininess
[                    Comma] | [ 53::96 ] | ,
[               Identifier] | [ 53::98 ] | Vector3
[               Identifier] | [ 53::106] | lightColor
[         CloseParenthesis] | [ 53::116] | )
[         OpenCurlyBracket] | [ 54::4  ] | {
[               Identifier] | [ 55::8  ] | Vector3
[               Identifier] | [ 55::16 ] | reflectDir
[               Assignator] | [ 55::27 ] | =
[               Identifier] | [ 55::29 ] | reflect
[          OpenParenthesis] | [ 55::36 ] | (
[                 Operator] | [ 55::37 ] | -
[               Identifier] | [ 55::38 ] | lightDir
[                    Comma] | [ 55::46 ] | ,
[               Identifier] | [ 55::48 ] | normal
[         CloseParenthesis] | [ 55::54 ] | )
[            EndOfSentence] | [ 55::55 ] | ;
[               Identifier] | [ 56::8  ] | float
[               Identifier] | [ 56::14 ] | spec
[               Assignator] | [ 56::19 ] | =
[               Identifier] | [ 56::21 ] | pow
[          OpenParenthesis] | [ 56::24 ] | (
[               Identifier] | [ 56::25 ] | max
[          OpenParenthesis] | [ 56::28 ] | (
[               Identifier] | [ 56::29 ] | dot
[          OpenParenthesis] | [ 56::32 ] | (
[               Identifier] | [ 56::33 ] | viewDir
[                    Comma] | [ 56::40 ] | ,
[               Identifier] | [ 56::42 ] | reflectDir
[         CloseParenthesis] | [ 56::52 ] | )
[                    Comma] | [ 56::53 ] | ,
[                   Number] | [ 56::55 ] | 0.0
[         CloseParenthesis] | [ 56::58 ] | )
[                    Comma] | [ 56::59 ] | ,
[               Identifier] | [ 56::61 ] | shininess
[         CloseParenthesis] | [ 56::70 ] | )
[            EndOfSentence] | [ 56::71 ] | ;
[                   Return] | [ 57::8  ] | return
[               Identifier] | [ 57::15 ] | spec
[                 Operator] | [ 57::20 ] | *
[               Identifier] | [ 57::22 ] | lightColor
[            EndOfSentence] | [ 57::32 ] | ;
[        CloseCurlyBracket] | [ 58::4  ] | }
[        CloseCurlyBracket] | [ 59::0  ] | }
[                  Comment] | [ 61::0  ] | /*
Pipeline Description:
This pipeline is designed to render a 3D object by processing its vertex data and applying lighting calculations.

Vertex Shader (VertexPass):
- Transforms the input vertex positions using a model matrix to position the object correctly in the world space.
- Transforms the normals using the normal matrix for accurate lighting calculations.
- Passes UV coordinates, transformed positions, and normals to the fragment shader.

Fragment Shader (FragmentPass):
- Performs lighting calculations using ambient, diffuse, and specular components.
- Combines these lighting components with a texture sampled from the UV coordinates.
- Discards fragments where the texture's alpha value is zero.
- Sets the final pixel color based on the combined lighting and texture information.

The vertex and fragment shaders work together to accurately render the 3D object with realistic lighting and texturing.
*/
[                  Comment] | [ 79::0  ] | // Define the vertex shader stage
[             PipelineFlow] | [ 80::0  ] | VertexPass
[          OpenParenthesis] | [ 80::10 ] | (
[         CloseParenthesis] | [ 80::11 ] | )
[         OpenCurlyBracket] | [ 81::0  ] | {
[               Identifier] | [ 82::4  ] | Vector4
[               Identifier] | [ 82::12 ] | worldPosition
[               Assignator] | [ 82::26 ] | =
[               Identifier] | [ 82::28 ] | modelAttributes
[                 Accessor] | [ 82::43 ] | .
[               Identifier] | [ 82::44 ] | modelMatrix
[                 Operator] | [ 82::56 ] | *
[               Identifier] | [ 82::58 ] | Vector4
[          OpenParenthesis] | [ 82::65 ] | (
[               Identifier] | [ 82::66 ] | vertexPosition
[                    Comma] | [ 82::80 ] | ,
[                   Number] | [ 82::82 ] | 1.0
[         CloseParenthesis] | [ 82::85 ] | )
[            EndOfSentence] | [ 82::86 ] | ;
[               Identifier] | [ 83::4  ] | fragPosition
[               Assignator] | [ 83::17 ] | =
[               Identifier] | [ 83::19 ] | worldPosition
[                 Accessor] | [ 83::32 ] | .
[               Identifier] | [ 83::33 ] | xyz
[            EndOfSentence] | [ 83::36 ] | ;
[               Identifier] | [ 84::4  ] | fragNormal
[               Assignator] | [ 84::15 ] | =
[               Identifier] | [ 84::17 ] | mat3
[          OpenParenthesis] | [ 84::21 ] | (
[               Identifier] | [ 84::22 ] | modelAttributes
[                 Accessor] | [ 84::37 ] | .
[               Identifier] | [ 84::38 ] | normalMatrix
[         CloseParenthesis] | [ 84::50 ] | )
[                 Operator] | [ 84::52 ] | *
[               Identifier] | [ 84::54 ] | vertexNormal
[            EndOfSentence] | [ 84::66 ] | ;
[               Identifier] | [ 85::4  ] | fragUV
[               Assignator] | [ 85::11 ] | =
[               Identifier] | [ 85::13 ] | vertexUV
[            EndOfSentence] | [ 85::21 ] | ;
[               Identifier] | [ 87::4  ] | Vector4
[               Identifier] | [ 87::12 ] | clipSpacePosition
[               Assignator] | [ 87::30 ] | =
[               Identifier] | [ 87::32 ] | worldPosition
[            EndOfSentence] | [ 87::45 ] | ;
[               Identifier] | [ 88::4  ] | pixelPosition
[               Assignator] | [ 88::18 ] | =
[               Identifier] | [ 88::20 ] | clipSpacePosition
[            EndOfSentence] | [ 88::37 ] | ;
[        CloseCurlyBracket] | [ 89::0  ] | }
[                  Comment] | [ 91::0  ] | // Define the fragment shader stage
[             PipelineFlow] | [ 92::0  ] | FragmentPass
[          OpenParenthesis] | [ 92::12 ] | (
[         CloseParenthesis] | [ 92::13 ] | )
[         OpenCurlyBracket] | [ 93::0  ] | {
[                  Comment] | [ 94::4  ] | // Error handling example
[              IfStatement] | [ 95::4  ] | if
[          OpenParenthesis] | [ 95::7  ] | (
[               Identifier] | [ 95::8  ] | lightingConstants
[                 Accessor] | [ 95::25 ] | .
[               Identifier] | [ 95::26 ] | ambientIntensity
[                 Operator] | [ 95::43 ] | <
[                   Number] | [ 95::45 ] | 0.0
[                 Operator] | [ 95::49 ] | ||
[               Identifier] | [ 95::52 ] | lightingConstants
[                 Accessor] | [ 95::69 ] | .
[               Identifier] | [ 95::70 ] | ambientIntensity
[                 Operator] | [ 95::87 ] | >
[                   Number] | [ 95::89 ] | 1.0
[         CloseParenthesis] | [ 95::92 ] | )
[         OpenCurlyBracket] | [ 96::4  ] | {
[               Identifier] | [ 97::8  ] | raiseException
[          OpenParenthesis] | [ 97::22 ] | (
[           StringLitteral] | [ 97::23 ] | "Ambient intensity must be between 0 and 1. Current value: %d"
[                    Comma] | [ 97::85 ] | ,
[               Identifier] | [ 97::87 ] | lightingConstants
[                 Accessor] | [ 97::104] | .
[               Identifier] | [ 97::105] | ambientIntensity
[         CloseParenthesis] | [ 97::121] | )
[            EndOfSentence] | [ 97::122] | ;
[        CloseCurlyBracket] | [ 98::4  ] | }
[               Identifier] | [100::4  ] | Vector3
[               Identifier] | [100::12 ] | normal
[               Assignator] | [100::19 ] | =
[               Identifier] | [100::21 ] | normalize
[          OpenParenthesis] | [100::30 ] | (
[               Identifier] | [100::31 ] | fragNormal
[         CloseParenthesis] | [100::41 ] | )
[            EndOfSentence] | [100::42 ] | ;
[               Identifier] | [101::4  ] | Vector3
[               Identifier] | [101::12 ] | lightDir
[               Assignator] | [101::21 ] | =
[               Identifier] | [101::23 ] | normalize
[          OpenParenthesis] | [101::32 ] | (
[               Identifier] | [101::33 ] | lightingConstants
[                 Accessor] | [101::50 ] | .
[               Identifier] | [101::51 ] | lightPosition
[                 Operator] | [101::65 ] | -
[               Identifier] | [101::67 ] | fragPosition
[         CloseParenthesis] | [101::79 ] | )
[            EndOfSentence] | [101::80 ] | ;
[               Identifier] | [102::4  ] | Vector3
[               Identifier] | [102::12 ] | viewDir
[               Assignator] | [102::20 ] | =
[               Identifier] | [102::22 ] | normalize
[          OpenParenthesis] | [102::31 ] | (
[                 Operator] | [102::32 ] | -
[               Identifier] | [102::33 ] | fragPosition
[         CloseParenthesis] | [102::45 ] | )
[            EndOfSentence] | [102::46 ] | ;
[               Identifier] | [104::4  ] | Vector3
[               Identifier] | [104::12 ] | ambient
[               Assignator] | [104::20 ] | =
[               Identifier] | [104::22 ] | lightingConstants
[                 Accessor] | [104::39 ] | .
[               Identifier] | [104::40 ] | ambientIntensity
[                 Operator] | [104::57 ] | *
[               Identifier] | [104::59 ] | lightingConstants
[                 Accessor] | [104::76 ] | .
[               Identifier] | [104::77 ] | lightColor
[            EndOfSentence] | [104::87 ] | ;
[               Identifier] | [106::4  ] | Vector3
[               Identifier] | [106::12 ] | diffuse
[               Assignator] | [106::20 ] | =
[               Identifier] | [106::22 ] | Lighting
[       NamespaceSeparator] | [106::30 ] | ::
[               Identifier] | [106::32 ] | calculateDiffuse
[          OpenParenthesis] | [106::48 ] | (
[               Identifier] | [106::49 ] | normal
[                    Comma] | [106::55 ] | ,
[               Identifier] | [106::57 ] | lightDir
[                    Comma] | [106::65 ] | ,
[               Identifier] | [106::67 ] | lightingConstants
[                 Accessor] | [106::84 ] | .
[               Identifier] | [106::85 ] | lightColor
[         CloseParenthesis] | [106::95 ] | )
[            EndOfSentence] | [106::96 ] | ;
[       NamespaceSeparator] | [108::4  ] | ::
[               Identifier] | [108::6  ] | Material
[               Identifier] | [108::15 ] | material
[            EndOfSentence] | [108::23 ] | ;
[               Identifier] | [109::4  ] | Vector3
[               Identifier] | [109::12 ] | specular
[               Assignator] | [109::21 ] | =
[       NamespaceSeparator] | [109::23 ] | ::
[               Identifier] | [109::25 ] | Lighting
[       NamespaceSeparator] | [109::33 ] | ::
[               Identifier] | [109::35 ] | calculateSpecular
[          OpenParenthesis] | [109::52 ] | (
[               Identifier] | [109::53 ] | normal
[                    Comma] | [109::59 ] | ,
[               Identifier] | [109::61 ] | lightDir
[                    Comma] | [109::69 ] | ,
[               Identifier] | [109::71 ] | viewDir
[                    Comma] | [109::78 ] | ,
[               Identifier] | [109::80 ] | material
[                 Accessor] | [109::88 ] | .
[               Identifier] | [109::89 ] | shininess
[                    Comma] | [109::98 ] | ,
[               Identifier] | [109::100] | lightingConstants
[                 Accessor] | [109::117] | .
[               Identifier] | [109::118] | lightColor
[         CloseParenthesis] | [109::128] | )
[            EndOfSentence] | [109::129] | ;
[               Identifier] | [111::4  ] | Vector3
[               Identifier] | [111::12 ] | finalColor
[               Assignator] | [111::23 ] | =
[               Identifier] | [111::25 ] | ambient
[                 Operator] | [111::33 ] | +
[               Identifier] | [111::35 ] | diffuse
[                 Operator] | [111::43 ] | *
[               Identifier] | [111::45 ] | material
[                 Accessor] | [111::53 ] | .
[               Identifier] | [111::54 ] | diffuseColor
[                 Operator] | [111::67 ] | +
[               Identifier] | [111::69 ] | specular
[                 Operator] | [111::78 ] | *
[               Identifier] | [111::80 ] | material
[                 Accessor] | [111::88 ] | .
[               Identifier] | [111::89 ] | specularColor
[            EndOfSentence] | [111::102] | ;
[               Identifier] | [113::4  ] | Vector4
[               Identifier] | [113::12 ] | textureColor
[               Assignator] | [113::25 ] | =
[               Identifier] | [113::27 ] | getPixel
[          OpenParenthesis] | [113::35 ] | (
[               Identifier] | [113::36 ] | diffuseTexture
[                    Comma] | [113::50 ] | ,
[               Identifier] | [113::52 ] | fragUV
[         CloseParenthesis] | [113::58 ] | )
[            EndOfSentence] | [113::59 ] | ;
[               Identifier] | [114::4  ] | finalColor
[               Assignator] | [114::15 ] | *=
[               Identifier] | [114::18 ] | textureColor
[                 Accessor] | [114::30 ] | .
[               Identifier] | [114::31 ] | rgb
[            EndOfSentence] | [114::34 ] | ;
[              IfStatement] | [116::4  ] | if
[          OpenParenthesis] | [116::7  ] | (
[               Identifier] | [116::8  ] | textureColor
[                 Accessor] | [116::20 ] | .
[               Identifier] | [116::21 ] | a
[                 Operator] | [116::23 ] | ==
[                   Number] | [116::26 ] | 0
[         CloseParenthesis] | [116::27 ] | )
[         OpenCurlyBracket] | [117::4  ] | {
[                  Discard] | [118::8  ] | discard
[            EndOfSentence] | [118::15 ] | ;
[        CloseCurlyBracket] | [119::4  ] | }
[               Identifier] | [121::4  ] | pixelColor
[               Assignator] | [121::15 ] | =
[               Identifier] | [121::17 ] | Vector4
[          OpenParenthesis] | [121::24 ] | (
[               Identifier] | [121::25 ] | finalColor
[                    Comma] | [121::35 ] | ,
[               Identifier] | [121::37 ] | textureColor
[                 Accessor] | [121::49 ] | .
[               Identifier] | [121::50 ] | a
[         CloseParenthesis] | [121::51 ] | )
[            EndOfSentence] | [121::52 ] | ;
[        CloseCurlyBracket] | [122::0  ] | }
